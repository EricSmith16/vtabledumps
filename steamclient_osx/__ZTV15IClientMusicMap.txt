// `vtable for'IClientMusicMap
// Auto reconstructed from vtable block @ 0x00F0B910
// from "steamclient.dylib", by ida_vtables.idc
0	IClientMusicMap::BIsEnabled(void)
1	IClientMusicMap::Enable(bool)
2	IClientMusicMap::EnableCrawlLogging(bool)
3	IClientMusicMap::BIsPlaying(void)
4	IClientMusicMap::GetQueueCount(void)
5	IClientMusicMap::GetCurrentQueueEntry(void)
6	IClientMusicMap::GetQueueEntryURI(int,char *,int)
7	IClientMusicMap::GetQueueEntryData(int,char *,int,char *,int,char *,int,int *,ETrackQueueOrigin *,int *)
8	IClientMusicMap::GetQueueEntryOrigin(int,ETrackQueueOrigin *,int *)
9	IClientMusicMap::EmptyQueue(void)
10	IClientMusicMap::RemoveQueueEntry(int,bool)
11	IClientMusicMap::AddArtistToQueue(char const*,bool,bool)
12	IClientMusicMap::AddTracksOfAlbumIDToQueue(int,int,bool,char const*,bool,bool,bool)
13	IClientMusicMap::AddTracksOfPlaylistIDToQueue(int,int,bool,bool,bool,bool)
14	IClientMusicMap::SetSuppressAutoTrackAdvance(bool)
15	IClientMusicMap::GetPlaybackStatus(void)
16	IClientMusicMap::SetPlayingRepeatStatus(PlayingRepeat_Status)
17	IClientMusicMap::GetPlayingRepeatStatus(void)
18	IClientMusicMap::TogglePlayingRepeatStatus(void)
19	IClientMusicMap::SetPlayingShuffled(bool)
20	IClientMusicMap::IsPlayingShuffled(void)
21	IClientMusicMap::Play(void)
22	IClientMusicMap::Pause(void)
23	IClientMusicMap::PlayPrevious(void)
24	IClientMusicMap::PlayNext(void)
25	IClientMusicMap::PlayEntry(int)
26	IClientMusicMap::TogglePlayPause(void)
27	IClientMusicMap::SetVolume(float)
28	IClientMusicMap::GetVolume(void)
29	IClientMusicMap::ToggleMuteVolume(void)
30	IClientMusicMap::IncreaseVolume(void)
31	IClientMusicMap::DecreaseVolume(void)
32	IClientMusicMap::SetPlaybackPosition(int)
33	IClientMusicMap::GetPlaybackPosition(void)
34	IClientMusicMap::GetPlaybackDuration(void)
35	IClientMusicMap::LocalLibraryCrawlTrack(char const*)
36	IClientMusicMap::ResetLocalLibrary(void)
37	IClientMusicMap::GetStatusLocalLibrary(void)
38	IClientMusicMap::SaveLocalLibraryDirectorySettings(void)
39	IClientMusicMap::GetLocalLibraryDirectoryEntryCount(void)
40	IClientMusicMap::GetLocalLibraryDirectoryEntry(int,char *,int)
41	IClientMusicMap::AddLocalLibraryDirectoryEntry(char const*)
42	IClientMusicMap::ResetLocalLibraryDirectories(bool)
43	IClientMusicMap::GetDefaultLocalLibraryDirectory(char *,int)
44	IClientMusicMap::LocalLibraryStopCrawling(void)
45	IClientMusicMap::UpdateLocalLibraryDirectoriesToCrawl(void)
46	IClientMusicMap::BLocalLibraryIsCrawling(void)
47	IClientMusicMap::GetLocalLibraryTrackCount(void)
48	IClientMusicMap::GetLocalLibraryAlbumCount(void)
49	IClientMusicMap::GetLocalLibraryAlbumID(int,bool)
50	IClientMusicMap::GetLocalLibraryAlbumIDEntry(int,char *,int,char *,int,int *,int *,bool *)
51	IClientMusicMap::GetLocalLibraryAlbumIDTrackEntry(int,int,char *,int,int *,char *,int,char *,int)
52	IClientMusicMap::GetLocalLibraryAlbumDirectoryForAlbumID(int,char *,int)
53	IClientMusicMap::GetLocalLibraryAlbumSortNameForAlbumID(int,char *,int)
54	IClientMusicMap::GetLocalLibraryArtistSortNameForAlbumID(int,char *,int)
55	IClientMusicMap::GetLocalLibraryTrackCountForAlbumID(int)
56	IClientMusicMap::GetLocalLibraryAlbumIDTrackKey(int,int,char *,int)
57	IClientMusicMap::GetLocalLibraryAlbumIDForTrackKey(char const*)
58	IClientMusicMap::GetLocalLibraryArtistCount(void)
59	IClientMusicMap::GetLocalLibraryArtistName(int,char *,int,char *,int)
60	IClientMusicMap::GetLocalLibraryAlbumCountForArtistName(char const*)
61	IClientMusicMap::GetLocalLibraryTrackAndAlbumCountOfArtistName(char const*,int *,int *)
62	IClientMusicMap::GetLocalLibraryAlbumIDForArtist(char const*,int)
63	IClientMusicMap::GetLocalLibraryRepresentativeAlbumIDForArtist(char const*,bool *)
64	IClientMusicMap::GetLocalLibraryTrackEntry(char const*,char *,int,int *,char *,int)
65	IClientMusicMap::BRequestAllArtistListData(int)
66	IClientMusicMap::BRequestAllAlbumListData(int)
67	IClientMusicMap::BRequestAllTracksListDataForAlbumID(int,int)
68	IClientMusicMap::GetPlaylistCount(void)
69	IClientMusicMap::GetPlaylistID(int)
70	IClientMusicMap::GetPositionForPlaylistID(int)
71	IClientMusicMap::GetPlaylistIDForPosition(int)
72	IClientMusicMap::BRequestAllPlayListData(int)
73	IClientMusicMap::GetNextPlaylistName(char const*,char *,int)
74	IClientMusicMap::InsertPlaylistWithNameAtPosition(char const*,int)
75	IClientMusicMap::MovePlaylistFromPositionToPosition(int,int)
76	IClientMusicMap::DeletePlaylistWithID(int)
77	IClientMusicMap::RenamePlaylistWithID(int,char const*)
78	IClientMusicMap::AddRandomTracksToPlaylistID(int,int)
79	IClientMusicMap::GetPlaylistIDData(int,char *,int,int *,int *,int *,int *,int *)
80	IClientMusicMap::GetPlaylistIDTrackCount(int)
81	IClientMusicMap::BRequestAllTracksListDataForPlaylistID(int,int)
82	IClientMusicMap::GetPlaylistIDTrackKey(int,int,char *,int,int *)
83	IClientMusicMap::GetPositionForPlaylistItemID(int)
84	IClientMusicMap::AddTrackKeyToPlaylistID(int,char const*)
85	IClientMusicMap::AddAlbumIDToPlaylistID(int,int,char const*)
86	IClientMusicMap::AddArtistNameToPlaylistID(int,char const*)
87	IClientMusicMap::AddPlaylistIDToPlaylistID(int,int)
88	IClientMusicMap::RemovePlaylistPositionFromPlaylistID(int,int)
89	IClientMusicMap::RemoveAllTracksFromPlaylistID(int,bool)
90	IClientMusicMap::MoveTrackFromPositionToPositonInPlaylistID(int,int,int)
91	IClientMusicMap::AppendQueueToPlaylistID(int,bool)
92	IClientMusicMap::GetLocalLibraryRepresentativeAlbumIDForPlaylist(int,bool *)
93	IClientMusicMap::MarkTrackKeyAsPlayed(char const*)
94	IClientMusicMap::GetMostRecentlyPlayedAlbums(int,int *)
95	IClientMusicMap::GetMostRecentlyAddedAlbums(int,int *)
96	IClientMusicMap::ActivateRemotePlayerWithID(int)
97	IClientMusicMap::GetActiveRemotePlayerID(void)
98	IClientMusicMap::GetRemotePlayerCount(void)
99	IClientMusicMap::GetRemotePlayerIDAndName(int,int *,char *,int)
100	IClientMusicMap::GetCurrentEntryTextForRemotePlayerWithID(int,char *,int)
101	IClientMusicMap::RegisterSteamMusicRemote(char const*)
102	IClientMusicMap::DeregisterSteamMusicRemote(void)
103	IClientMusicMap::BIsCurrentMusicRemote(void)
104	IClientMusicMap::BActivationSuccess(bool)
105	IClientMusicMap::SetDisplayName(char const*)
106	IClientMusicMap::SetPNGIcon_64x64(void *,unsigned int)
107	IClientMusicMap::EnablePlayPrevious(bool)
108	IClientMusicMap::EnablePlayNext(bool)
109	IClientMusicMap::EnableShuffled(bool)
110	IClientMusicMap::EnableLooped(bool)
111	IClientMusicMap::EnableQueue(bool)
112	IClientMusicMap::EnablePlaylists(bool)
113	IClientMusicMap::UpdatePlaybackStatus(AudioPlayback_Status)
114	IClientMusicMap::UpdateShuffled(bool)
115	IClientMusicMap::UpdateLooped(bool)
116	IClientMusicMap::UpdateVolume(float)
117	IClientMusicMap::CurrentEntryWillChange(void)
118	IClientMusicMap::CurrentEntryIsAvailable(bool)
119	IClientMusicMap::UpdateCurrentEntryText(char const*)
120	IClientMusicMap::UpdateCurrentEntryElapsedSeconds(int)
121	IClientMusicMap::UpdateCurrentEntryCoverArt(void *,unsigned int)
122	IClientMusicMap::CurrentEntryDidChange(void)
123	IClientMusicMap::QueueWillChange(void)
124	IClientMusicMap::ResetQueueEntries(void)
125	IClientMusicMap::SetQueueEntry(int,int,char const*)
126	IClientMusicMap::SetCurrentQueueEntry(int)
127	IClientMusicMap::QueueDidChange(void)
128	IClientMusicMap::PlaylistWillChange(void)
129	IClientMusicMap::ResetPlaylistEntries(void)
130	IClientMusicMap::SetPlaylistEntry(int,int,char const*)
131	IClientMusicMap::SetCurrentPlaylistEntry(int)
132	IClientMusicMap::PlaylistDidChange(void)
133	IClientMusicMap::RequestAlbumCoverForAlbumID(int)
134	IClientMusicMap::RequestAlbumCoverForTrackKey(char const*)
135	IClientMusicMap::GetAlbumCoverForIndex(int,void *,unsigned int)
136	IClientMusicMap::CancelAlbumCoverRequestForIndex(int)
137	IClientMusicMap::StartUsingSpotify(void)
138	IClientMusicMap::StopUsingSpotify(void)
139	IClientMusicMap::GetStatusSpotify(void)
140	IClientMusicMap::LoginSpotify(char const*,char const*)
141	IClientMusicMap::ReloginSpotify(void)
142	IClientMusicMap::GetCurrentUserSpotify(void)
143	IClientMusicMap::ForgetCurrentUserSpotify(void)
144	IClientMusicMap::LogoutSpotify(void)
145	IClientMusicMap::DumpStatusToConsole(void)
