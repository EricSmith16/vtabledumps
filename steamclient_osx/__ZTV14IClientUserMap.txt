// `vtable for'IClientUserMap
// Auto reconstructed from vtable block @ 0x00F0CD30
// from "steamclient.dylib", by ida_vtables.idc
0	IClientUserMap::GetHSteamUser(void)
1	IClientUserMap::LogOn(bool,CSteamID)
2	IClientUserMap::LogOnWithPassword(bool,char const*,char const*)
3	IClientUserMap::LogOnAndCreateNewSteamAccountIfNeeded(bool)
4	IClientUserMap::LogOnConnectionless(void)
5	IClientUserMap::LogOff(void)
6	IClientUserMap::BLoggedOn(void)
7	IClientUserMap::GetLogonState(void)
8	IClientUserMap::BConnected(void)
9	IClientUserMap::BTryingToLogin(void)
10	IClientUserMap::GetSteamID(void)
11	IClientUserMap::GetConsoleSteamID(void)
12	IClientUserMap::IsVACBanned(unsigned int)
13	IClientUserMap::SetEmail(char const*)
14	IClientUserMap::SetConfigString(EConfigSubTree,char const*,char const*)
15	IClientUserMap::GetConfigString(EConfigSubTree,char const*,char *,int)
16	IClientUserMap::SetConfigInt(EConfigSubTree,char const*,int)
17	IClientUserMap::GetConfigInt(EConfigSubTree,char const*,int *)
18	IClientUserMap::GetConfigStoreKeyName(EConfigSubTree,char const*,char *,int)
19	IClientUserMap::InitiateGameConnection(void *,int,CSteamID,CGameID,unsigned int,unsigned short,bool)
20	IClientUserMap::InitiateGameConnectionOld(void *,int,CSteamID,CGameID,unsigned int,unsigned short,bool,void *,int)
21	IClientUserMap::TerminateGameConnection(unsigned int,unsigned short)
22	IClientUserMap::TerminateAppMultiStep(unsigned int,unsigned int)
23	IClientUserMap::SetSelfAsPrimaryChatDestination(void)
24	IClientUserMap::IsPrimaryChatDestination(void)
25	IClientUserMap::RequestLegacyCDKey(unsigned int)
26	IClientUserMap::AckGuestPass(char const*)
27	IClientUserMap::RedeemGuestPass(char const*)
28	IClientUserMap::GetGuestPassToGiveCount(void)
29	IClientUserMap::GetGuestPassToRedeemCount(void)
30	IClientUserMap::GetGuestPassToGiveInfo(unsigned int,unsigned long long *,unsigned int *,unsigned int *,unsigned int *,unsigned int *,unsigned int *,char *,int)
31	IClientUserMap::GetGuestPassToGiveOut(unsigned int)
32	IClientUserMap::GetGuestPassToRedeem(unsigned int)
33	IClientUserMap::GetGuestPassToRedeemInfo(unsigned int,unsigned long long *,unsigned int *,unsigned int *,unsigned int *,unsigned int *,unsigned int *)
34	IClientUserMap::GetGuestPassToRedeemSenderName(unsigned int,char *,int)
35	IClientUserMap::GetNumAppsInGuestPassesToRedeem(void)
36	IClientUserMap::GetAppsInGuestPassesToRedeem(unsigned int *,unsigned int)
37	IClientUserMap::RequestStoreAuthURL(char const*)
38	IClientUserMap::SetLanguage(char const*)
39	IClientUserMap::TrackAppUsageEvent(CGameID,int,char const*)
40	IClientUserMap::RaiseConnectionPriority(EConnectionPriority)
41	IClientUserMap::ResetConnectionPriority(int)
42	IClientUserMap::BHasCachedCredentials(char const*)
43	IClientUserMap::SetAccountNameForCachedCredentialLogin(char const*,bool)
44	IClientUserMap::GetCurrentWebAuthToken(char *,int,char *,int)
45	IClientUserMap::RequestWebAuthToken(void)
46	IClientUserMap::SetLoginInformation(char const*,char const*,bool)
47	IClientUserMap::SetTwoFactorCode(char const*)
48	IClientUserMap::ClearAllLoginInformation(void)
49	IClientUserMap::GetLanguage(char *,int)
50	IClientUserMap::BIsCyberCafe(void)
51	IClientUserMap::BIsAcademicAccount(void)
52	IClientUserMap::BIsPortal2EducationAccount(void)
53	IClientUserMap::BIsAlienwareDemoAccount(void)
54	IClientUserMap::CreateAccount(char const*,char const*,char const*)
55	IClientUserMap::ResetPassword(char const*,char const*,char const*,char const*,char const*,char const*)
56	IClientUserMap::ValidatePasswordResetCodeAndSendSms(char const*,char const*)
57	IClientUserMap::TrackNatTraversalStat(CNatTraversalStat const*)
58	IClientUserMap::TrackSteamUsageEvent(ESteamUsageEvent,unsigned char const*,unsigned int)
59	IClientUserMap::TrackSteamGUIUsage(char const*)
60	IClientUserMap::SetComputerInUse(void)
61	IClientUserMap::BIsGameRunning(CGameID)
62	IClientUserMap::BIsGameWindowReady(CGameID)
63	IClientUserMap::BUpdateAppOwnershipTicket(unsigned int,bool,bool)
64	IClientUserMap::UpdateAppOwnershipTickets(unsigned int *,unsigned int,bool,bool)
65	IClientUserMap::RequestCustomBinary(char const*,unsigned int,bool,bool)
66	IClientUserMap::GetCustomBinariesState(unsigned int,unsigned int *)
67	IClientUserMap::RequestCustomBinaries(unsigned int,bool,bool,unsigned int *)
68	IClientUserMap::SetCellID(unsigned int)
69	IClientUserMap::SetWinningPingTimeForCellID(unsigned int)
70	IClientUserMap::GetUserBaseFolder(void)
71	IClientUserMap::GetUserDataFolder(CGameID,char *,int)
72	IClientUserMap::GetUserConfigFolder(char *,int)
73	IClientUserMap::GetAccountName(char *,unsigned int)
74	IClientUserMap::GetAccountName(CSteamID,char *,unsigned int)
75	IClientUserMap::IsPasswordRemembered(void)
76	IClientUserMap::RequiresLegacyCDKey(unsigned int,bool *)
77	IClientUserMap::GetLegacyCDKey(unsigned int,char *,int)
78	IClientUserMap::SetLegacyCDKey(unsigned int,char const*)
79	IClientUserMap::WriteLegacyCDKey(unsigned int)
80	IClientUserMap::RemoveLegacyCDKey(unsigned int)
81	IClientUserMap::RequestLegacyCDKeyFromApp(unsigned int,unsigned int,unsigned int)
82	IClientUserMap::BIsAnyGameRunning(void)
83	IClientUserMap::TestAvailablePassword(unsigned char const*,int)
84	IClientUserMap::GetSteamGuardDetails(void)
85	IClientUserMap::GetTwoFactorDetails(void)
86	IClientUserMap::BHasTwoFactor(void)
87	IClientUserMap::RecoverAuthenticator(char const*,char const*,char const*,char const*,char const*)
88	IClientUserMap::ChangePassword(char const*,char const*)
89	IClientUserMap::GetEmail(char *,int,bool *)
90	IClientUserMap::RequestForgottenPasswordEmail(char const*,char const*)
91	IClientUserMap::RequestAccountResetDetails(char const*,char const*)
92	IClientUserMap::FindAccountsByEmailAddress(char const*)
93	IClientUserMap::FindAccountsByCdKey(char const*)
94	IClientUserMap::GetNumAccountsWithEmailAddress(char const*)
95	IClientUserMap::IsAccountNameInUse(char const*)
96	IClientUserMap::Test_FakeConnectionTimeout(void)
97	IClientUserMap::RunInstallScript(unsigned int *,int,char const*,char const*,bool)
98	IClientUserMap::IsInstallScriptRunning(void)
99	IClientUserMap::GetInstallScriptState(char *,unsigned int,unsigned int *,unsigned int *)
100	IClientUserMap::SpawnProcess(char const*,char const*,unsigned int,char const*,CGameID,unsigned int,char const*,unsigned int,unsigned int)
101	IClientUserMap::GetAppOwnershipTicketLength(unsigned int)
102	IClientUserMap::GetAppOwnershipTicketData(unsigned int,void *,unsigned int)
103	IClientUserMap::GetAppOwnershipTicketExtendedData(unsigned int,void *,unsigned int,unsigned int *,unsigned int *,unsigned int *,unsigned int *)
104	IClientUserMap::GetMarketingMessageCount(void)
105	IClientUserMap::GetMarketingMessage(int,unsigned long long *,char *,int,EMarketingMessageFlags *)
106	IClientUserMap::GetAuthSessionTicket(void *,int,unsigned int *)
107	IClientUserMap::BeginAuthSession(void const*,int,CSteamID)
108	IClientUserMap::EndAuthSession(CSteamID)
109	IClientUserMap::CancelAuthTicket(unsigned int)
110	IClientUserMap::IsUserSubscribedAppInTicket(CSteamID,unsigned int)
111	IClientUserMap::AdvertiseGame(CGameID,CSteamID,unsigned int,unsigned short)
112	IClientUserMap::RequestEncryptedAppTicket(void *,int)
113	IClientUserMap::GetEncryptedAppTicket(void *,int,unsigned int *)
114	IClientUserMap::GetGameBadgeLevel(int,bool)
115	IClientUserMap::GetPlayerSteamLevel(void)
116	IClientUserMap::SetAccountLimited(bool)
117	IClientUserMap::BIsAccountLimited(void)
118	IClientUserMap::SetAccountCommunityBanned(bool)
119	IClientUserMap::BIsAccountCommunityBanned(void)
120	IClientUserMap::SetLimitedAccountCanInviteFriends(bool)
121	IClientUserMap::BLimitedAccountCanInviteFriends(void)
122	IClientUserMap::SendValidationEmail(void)
123	IClientUserMap::BGameConnectTokensAvailable(void)
124	IClientUserMap::NumGamesRunning(void)
125	IClientUserMap::GetRunningGameID(int)
126	IClientUserMap::GetRunningGamePID(int)
127	IClientUserMap::GetAccountSecurityPolicyFlags(void)
128	IClientUserMap::RequestPasswordChangeEmail(char const*,int)
129	IClientUserMap::ChangePasswordWithCode(char const*,char const*,char const*)
130	IClientUserMap::RequestEmailChange(char const*,char const*)
131	IClientUserMap::ChangeEmailWithCode(char const*,char const*,char const*,char const*,char const*)
132	IClientUserMap::SetClientStat(EClientStat,long long,unsigned int,unsigned int,unsigned int)
133	IClientUserMap::VerifyPassword(char const*)
134	IClientUserMap::BSupportUser(void)
135	IClientUserMap::BNeedsSSANextSteamLogon(void)
136	IClientUserMap::ClearNeedsSSANextSteamLogon(void)
137	IClientUserMap::BIsAppOverlayEnabled(CGameID)
138	IClientUserMap::BOverlayIgnoreChildProcesses(CGameID)
139	IClientUserMap::BIsBehindNAT(void)
140	IClientUserMap::GetMicroTxnAppID(unsigned long long)
141	IClientUserMap::GetMicroTxnOrderID(unsigned long long)
142	IClientUserMap::BGetMicroTxnPrice(unsigned long long,CAmount_t<int> *,CAmount_t<int> *,bool *,CAmount_t<int> *)
143	IClientUserMap::GetMicroTxnLineItemCount(unsigned long long)
144	IClientUserMap::BGetMicroTxnLineItem(unsigned long long,unsigned int,CAmount_t<int> *,unsigned int *,char *,unsigned int,int *,unsigned char *,CAmount_t<int> *,bool *)
145	IClientUserMap::BIsSandboxMicroTxn(unsigned long long,bool *)
146	IClientUserMap::BMicroTxnRequiresCachedPmtMethod(unsigned long long,bool *)
147	IClientUserMap::AuthorizeMicroTxn(unsigned long long,EMicroTxnAuthResponse)
148	IClientUserMap::BGetWalletBalance(bool *,CAmount_t<int> *,CAmount_t<int> *)
149	IClientUserMap::RequestMicroTxnInfo(unsigned long long)
150	IClientUserMap::BMicroTxnRefundable(unsigned long long)
151	IClientUserMap::BGetAppMinutesPlayed(unsigned int,int *,int *)
152	IClientUserMap::GetAppLastPlayedTime(unsigned int)
153	IClientUserMap::GetAppUpdateDisabledSecondsRemaining(unsigned int)
154	IClientUserMap::BGetGuideURL(unsigned int,char *,unsigned int)
155	IClientUserMap::BPromptToVerifyEmail(void)
156	IClientUserMap::BPromptToChangePassword(void)
157	IClientUserMap::BAccountExtraSecurity(void)
158	IClientUserMap::BAccountShouldShowLockUI(void)
159	IClientUserMap::GetCountAuthedComputers(void)
160	IClientUserMap::BSteamGuardNewMachineNotification(void)
161	IClientUserMap::GetSteamGuardEnabledTime(void)
162	IClientUserMap::GetSteamGuardHistoryEntry(int,unsigned int *,unsigned int *,bool *,char *,int,char *,int)
163	IClientUserMap::SetSteamGuardNewMachineDialogResponse(bool,bool)
164	IClientUserMap::SetPhoneIsVerified(bool)
165	IClientUserMap::BIsPhoneVerified(void)
166	IClientUserMap::SetPhoneIsIdentifying(bool)
167	IClientUserMap::BIsPhoneIdentifying(void)
168	IClientUserMap::SetPhoneIsRequiringVerification(bool)
169	IClientUserMap::BIsPhoneRequiringVerification(void)
170	IClientUserMap::ChangeTwoFactorAuthOptions(int)
171	IClientUserMap::Set2ndFactorAuthCode(char const*,bool)
172	IClientUserMap::SetUserMachineName(char const*)
173	IClientUserMap::GetUserMachineName(char *,int)
174	IClientUserMap::GetEmailDomainFromLogonFailure(char *,int)
175	IClientUserMap::BIsSubscribedApp(unsigned int)
176	IClientUserMap::GetSubscribedApps(unsigned int *,unsigned int,bool)
177	IClientUserMap::RegisterActivationCode(char const*)
178	IClientUserMap::AckSystemIM(unsigned long long)
179	IClientUserMap::RequestSpecialSurvey(unsigned int)
180	IClientUserMap::SendSpecialSurveyResponse(unsigned int,unsigned char const*,unsigned int)
181	IClientUserMap::RequestNotifications(void)
182	IClientUserMap::GetAppOwnershipInfo(unsigned int,unsigned int *,unsigned int *,char *)
183	IClientUserMap::SendGameWebCallback(unsigned int,char const*)
184	IClientUserMap::StopStreaming(bool,int)
185	IClientUserMap::BIsStreamingUIToRemoteDevice(void)
186	IClientUserMap::BIsCurrentlyNVStreaming(void)
187	IClientUserMap::RequestStopNVStreaming(void)
188	IClientUserMap::OnBigPictureStreamingResult(bool,void *)
189	IClientUserMap::OnBigPictureStreamingDone(void)
190	IClientUserMap::OnBigPictureStreamRestarting(void)
191	IClientUserMap::LockParentalLock(void)
192	IClientUserMap::UnlockParentalLock(char const*)
193	IClientUserMap::BIsParentalLockEnabled(void)
194	IClientUserMap::BIsParentalLockLocked(void)
195	IClientUserMap::BlockApp(unsigned int)
196	IClientUserMap::UnblockApp(unsigned int)
197	IClientUserMap::BIsAppBlocked(unsigned int)
198	IClientUserMap::BIsAppInBlockList(unsigned int)
199	IClientUserMap::BlockFeature(EParentalFeature)
200	IClientUserMap::UnblockFeature(EParentalFeature)
201	IClientUserMap::BIsFeatureBlocked(EParentalFeature)
202	IClientUserMap::BIsFeatureInBlockList(EParentalFeature)
203	IClientUserMap::GetParentalUnlockTime(void)
204	IClientUserMap::BGetRecoveryEmail(char *,int)
205	IClientUserMap::RequestParentalRecoveryEmail(void)
206	IClientUserMap::BGetSerializedParentalSettings(CUtlBuffer *)
207	IClientUserMap::BSetParentalSettings(CUtlBuffer *)
208	IClientUserMap::BDisableParentalSettings(void)
209	IClientUserMap::BGetParentalWebToken(CUtlBuffer *,CUtlBuffer *)
210	IClientUserMap::BCanLogonOfflineMode(void)
211	IClientUserMap::LogOnOfflineMode(void)
212	IClientUserMap::ValidateOfflineLogonTicket(char const*)
213	IClientUserMap::BGetOfflineLogonTicket(char const*,COffline_OfflineLogonTicket *)
214	IClientUserMap::UploadLocalClientLogs(void)
215	IClientUserMap::SetAsyncNotificationEnabled(unsigned int,bool)
216	IClientUserMap::BIsOtherSessionPlaying(unsigned int *)
217	IClientUserMap::BKickOtherPlayingSession(void)
218	IClientUserMap::PerformAccountRecoveryUpload(void)
219	IClientUserMap::BIsAccountLockedDown(void)
