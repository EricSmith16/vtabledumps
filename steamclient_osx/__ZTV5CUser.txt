// `vtable for'CUser
// Auto reconstructed from vtable block @ 0x00ED39A0
// from "steamclient.dylib", by ida_vtables.idc
0	CUser::~CUser()
1	CUser::~CUser()
2	CUser::Init(void)
3	CUser::Shutdown(void)
4	CUser::GetHSteamUser(void)
5	CBaseUser::GetSteamID(void)const
6	CUser::UserStats(void)
7	CUser::LogOff(void)
8	CUser::BLoggedOn(void)
9	CUser::GetLogonState(void)
10	CUser::BConnected(void)
11	CUser::BTryingToLogin(void)
12	CBaseUser::GetCurrentSessionToken(void)
13	CBaseUser::SetCurrentSessionToken(unsigned long long)
14	CUser::SetCellID(unsigned int)
15	CUser::SetWinningPingTimeForCellID(unsigned int)
16	CUser::RaiseConnectionPriority(EConnectionPriority)
17	CUser::ResetConnectionPriority(int)
18	CUser::Test_FakeConnectionTimeout(void)
19	CBaseUser::Test_FailNextConnect(void)
20	CBaseUser::Test_AddCMAddress(unsigned int,unsigned short)
21	CBaseUser::Test_SetCMAddresses(netadr_t const*,unsigned int)
22	CBaseUser::SendP2PIntroducerPacket(EIntroducerRouting,void const*,unsigned int)
23	CUser::TrackSteamUsageEvent(ESteamUsageEvent,unsigned char const*,unsigned int)
24	CUser::TrackSteamGUIUsage(char const*)
25	CBaseUser::OnConnectedToMultiplayerAuthServer(void)
26	CUser::GetUserConfigFolder(char *,int)
27	CUser::GetConfigString(EConfigSubTree)
28	CUser::DeleteConfigKey(EConfigSubTree,char const*)
29	CUser::SetConfigString(EConfigSubTree,char const*,char const*)
30	CUser::GetConfigString(EConfigSubTree,char const*,char *,int)
31	CUser::SetConfigInt(EConfigSubTree,char const*,int)
32	CUser::GetConfigInt(EConfigSubTree,char const*,int *)
33	CUser::SetConfigBinaryBlob(EConfigSubTree,char const*,unsigned char const*,unsigned int)
34	CUser::GetConfigBinaryBlob(EConfigSubTree,char const*,unsigned char *,unsigned int *)
35	CUser::GetConfigStoreKeyName(EConfigSubTree,char const*,char *,int)
36	CBaseUser::GetServiceTransport(void)
37	CUser::GetPUser(void)
38	CBaseUser::GetPGameServer(void)
39	CBaseUser::GetPContentServer(void)
40	CUser::RunFrame(void)
41	CUser::Validate(CValidator &,char const*)
42	CUser::OnSteamPipeClosed(int)
43	CUser::LogOn(bool,CSteamID)
44	CUser::LogOnWithPassword(bool,char const*,char const*)
45	CUser::LogOnAndCreateNewSteamAccountIfNeeded(bool)
46	CUser::LogOnConnectionless(void)
47	CUser::GetSteamID(void)
48	CUser::GetConsoleSteamID(void)
49	CUser::BSupportUser(void)
50	CUser::BNeedsSSANextSteamLogon(void)
51	CUser::ClearNeedsSSANextSteamLogon(void)
52	CUser::BIsAppOverlayEnabled(CGameID)
53	CUser::BOverlayIgnoreChildProcesses(CGameID)
54	CUser::RequestNotifications(void)
55	CUser::GetEmailDomainFromLogonFailure(char *,int)
56	CUser::IsVACBanned(unsigned int)
57	CUser::SetEmail(char const*)
58	CUser::GetEmail(char *,int,bool *)
59	CUser::SetLanguage(char const*)
60	CUser::GetLanguage(char *,int)
61	CUser::GetAccountName(char *,unsigned int)
62	CUser::GetAccountName(CSteamID,char *,unsigned int)
63	CUser::IsPasswordRemembered(void)
64	CUser::BHasCachedCredentials(char const*)
65	CUser::SetAccountNameForCachedCredentialLogin(char const*,bool)
66	CUser::SetLoginInformation(char const*,char const*,bool)
67	CUser::SetTwoFactorCode(char const*)
68	CUser::ClearAllLoginInformation(void)
69	CUser::BIsBehindNAT(void)
70	CUser::GetGameBadgeLevel(int,bool)
71	CUser::GetPlayerSteamLevel(void)
72	CUser::RegisterActivationCode(char const*)
73	CUser::GetUserBaseFolder(void)
74	CUser::GetUserDataFolder(CGameID,char *,int)
75	CUser::InitiateGameConnection(void *,int,CSteamID,CGameID,unsigned int,unsigned short,bool)
76	CUser::InitiateGameConnectionOld(void *,int,CSteamID,CGameID,unsigned int,unsigned short,bool,void *,int)
77	CUser::TerminateGameConnection(unsigned int,unsigned short)
78	CUser::TerminateAppMultiStep(unsigned int,unsigned int)
79	CUser::GetAuthSessionTicket(void *,int,unsigned int *)
80	CUser::BeginAuthSession(void const*,int,CSteamID)
81	CUser::EndAuthSession(CSteamID)
82	CUser::CancelAuthTicket(unsigned int)
83	CUser::IsUserSubscribedAppInTicket(CSteamID,unsigned int)
84	CUser::AdvertiseGame(CGameID,CSteamID,unsigned int,unsigned short)
85	CUser::RequestEncryptedAppTicket(void *,int)
86	CUser::GetEncryptedAppTicket(void *,int,unsigned int *)
87	CUser::AckGuestPass(char const*)
88	CUser::RedeemGuestPass(char const*)
89	CUser::GetGuestPassToGiveOut(unsigned int)
90	CUser::GetGuestPassToRedeem(unsigned int)
91	CUser::GetNumAppsInGuestPassesToRedeem(void)
92	CUser::GetAppsInGuestPassesToRedeem(unsigned int *,unsigned int)
93	CUser::GetGuestPassToGiveCount(void)
94	CUser::GetGuestPassToRedeemCount(void)
95	CUser::GetGuestPassToGiveInfo(unsigned int,unsigned long long *,unsigned int *,unsigned int *,unsigned int *,unsigned int *,unsigned int *,char *,int)
96	CUser::GetGuestPassToRedeemInfo(unsigned int,unsigned long long *,unsigned int *,unsigned int *,unsigned int *,unsigned int *,unsigned int *)
97	CUser::GetGuestPassToRedeemSenderName(unsigned int,char *,int)
98	CUser::SetSelfAsPrimaryChatDestination(void)
99	CUser::IsPrimaryChatDestination(void)
100	CUser::GetAppOwnershipTicketLength(unsigned int)
101	CUser::GetAppOwnershipTicketData(unsigned int,void *,unsigned int)
102	CUser::GetAppOwnershipTicketExtendedData(unsigned int,void *,unsigned int,unsigned int *,unsigned int *,unsigned int *,unsigned int *)
103	CUser::RequestSpecialSurvey(unsigned int)
104	CUser::SendSpecialSurveyResponse(unsigned int,unsigned char const*,unsigned int)
105	CUser::GetAppOwnershipInfo(unsigned int,unsigned int *,unsigned int *,char *)
106	CUser::SendGameWebCallback(unsigned int,char const*)
107	CUser::PurchaseWithActivationCode(char const*)
108	CUser::HasActiveLicense(unsigned int)
109	CUser::EnableTestLicense(unsigned int)
110	CUser::DisableTestLicense(unsigned int)
111	CUser::GetAppsInPackage(unsigned int,unsigned int *,unsigned int)
112	CUser::RequestFreeLicenseForApps(unsigned int const*,unsigned int)
113	CUser::GetLicenseInfo(unsigned int,unsigned int *,unsigned int *,int *,int *,EPaymentMethod *,unsigned int *,int *,char *)
114	CUser::TrackAppUsageEvent(CGameID,int,char const*)
115	CUser::TrackNatTraversalStat(CNatTraversalStat const*)
116	CUser::SetComputerInUse(void)
117	CUser::GetCustomBinariesState(unsigned int,unsigned int *)
118	CUser::RequestCustomBinary(char const*,unsigned int,bool,bool)
119	CUser::RequestCustomBinaries(unsigned int,bool,bool,unsigned int *)
120	CUser::GetFavoriteGameCount(void)
121	CUser::GetFavoriteGame(int,unsigned int *,unsigned int *,unsigned short *,unsigned short *,unsigned int *,unsigned int *)
122	CUser::AddFavoriteGame(unsigned int,unsigned int,unsigned short,unsigned short,unsigned int,unsigned int)
123	CUser::RemoveFavoriteGame(unsigned int,unsigned int,unsigned short,unsigned short,unsigned int)
124	CUser::RequestLobbyList(void)
125	CUser::AddRequestLobbyListStringFilter(char const*,char const*,ELobbyComparison)
126	CUser::AddRequestLobbyListNumericalFilter(char const*,int,ELobbyComparison)
127	CUser::AddRequestLobbyListNearValueFilter(char const*,int)
128	CUser::AddRequestLobbyListFilterSlotsAvailable(int)
129	CUser::AddRequestLobbyListDistanceFilter(ELobbyDistanceFilter)
130	CUser::AddRequestLobbyListResultCountFilter(int)
131	CUser::AddRequestLobbyListCompatibleMembersFilter(CSteamID)
132	CUser::GetLobbyByIndex(int)
133	CUser::CreateLobby(ELobbyType,int)
134	CUser::JoinLobby(CSteamID)
135	CUser::LeaveLobby(CSteamID)
136	CUser::InviteUserToLobby(CSteamID,CSteamID)
137	CUser::GetNumLobbyMembers(CSteamID)
138	CUser::GetLobbyMemberByIndex(CSteamID,int)
139	CUser::GetLobbyData(CSteamID,char const*)
140	CUser::SetLobbyData(CSteamID,char const*,char const*)
141	CUser::GetLobbyDataCount(CSteamID)
142	CUser::GetLobbyDataByIndex(CSteamID,int,char *,int,char *,int)
143	CUser::DeleteLobbyData(CSteamID,char const*)
144	CUser::GetLobbyMemberData(CSteamID,CSteamID,char const*)
145	CUser::SetLobbyMemberData(CSteamID,char const*,char const*)
146	CUser::SendLobbyChatMsg(CSteamID,void const*,int)
147	CUser::GetLobbyChatEntry(CSteamID,int,CSteamID*,void *,int,EChatEntryType *)
148	CUser::RequestLobbyData(CSteamID)
149	CUser::SetLobbyGameServer(CSteamID,unsigned int,unsigned short,CSteamID)
150	CUser::GetLobbyGameServer(CSteamID,unsigned int *,unsigned short *,CSteamID*)
151	CUser::SetLobbyMemberLimit(CSteamID,int)
152	CUser::GetLobbyMemberLimit(CSteamID)
153	CUser::SetLobbyVoiceEnabled(CSteamID,bool)
154	CUser::RequestFriendsLobbies(void)
155	CUser::SetLobbyType(CSteamID,ELobbyType)
156	CUser::SetLobbyJoinable(CSteamID,bool)
157	CUser::GetLobbyOwner(CSteamID)
158	CUser::SetLobbyOwner(CSteamID,CSteamID)
159	CUser::SetLinkedLobby(CSteamID,CSteamID)
160	CUser::BeginGMSQuery(unsigned int,int,char const*)
161	CUser::PollGMSQuery(long long)
162	CUser::GetGMSQueryResults(long long,IClientMatchmaking::GMSQueryResult_t *,int)
163	CUser::ReleaseGMSQuery(long long)
164	CUser::SendGameServerPingSample(unsigned int,int,PingSample_t const*)
165	CUser::EnsureFavoriteGameAccountsUpdated(bool)
166	CUser::RequestWebAuthToken(void)
167	CUser::GetCurrentWebAuthToken(char *,int,char *,int)
168	CUser::RequestStoreAuthURL(char const*)
169	CUser::BIsCyberCafe(void)
170	CUser::BIsAcademicAccount(void)
171	CUser::BIsPortal2EducationAccount(void)
172	CUser::BIsAlienwareDemoAccount(void)
173	CUser::CreateAccount(char const*,char const*,char const*)
174	CUser::ResetPassword(char const*,char const*,char const*,char const*,char const*,char const*)
175	CUser::ValidatePasswordResetCodeAndSendSms(char const*,char const*)
176	CUser::TestAvailablePassword(unsigned char const*,int)
177	CUser::GetSteamGuardDetails(void)
178	CUser::GetTwoFactorDetails(void)
179	CUser::BHasTwoFactor(void)
180	CUser::RecoverAuthenticator(char const*,char const*,char const*,char const*,char const*)
181	CUser::ChangePassword(char const*,char const*)
182	CUser::GetAccountSecurityPolicyFlags(void)
183	CUser::RequestPasswordChangeEmail(char const*,int)
184	CUser::ChangePasswordWithCode(char const*,char const*,char const*)
185	CUser::VerifyPassword(char const*)
186	CUser::RequestEmailChange(char const*,char const*)
187	CUser::ChangeEmailWithCode(char const*,char const*,char const*,char const*,char const*)
188	CUser::RequestForgottenPasswordEmail(char const*,char const*)
189	CUser::RequestAccountResetDetails(char const*,char const*)
190	CUser::FindAccountsByEmailAddress(char const*)
191	CUser::FindAccountsByCdKey(char const*)
192	CUser::GetNumAccountsWithEmailAddress(char const*)
193	CUser::IsAccountNameInUse(char const*)
194	CUser::RunInstallScript(unsigned int *,int,char const*,char const*,bool)
195	CUser::IsInstallScriptRunning(void)
196	CUser::GetInstallScriptState(char *,unsigned int,unsigned int *,unsigned int *)
197	CUser::SpawnProcess(char const*,char const*,unsigned int,char const*,CGameID,unsigned int,char const*,unsigned int,unsigned int)
198	CUser::SetAccountLimited(bool)
199	CUser::BIsAccountLimited(void)
200	CUser::SetLimitedAccountCanInviteFriends(bool)
201	CUser::BLimitedAccountCanInviteFriends(void)
202	CUser::SetAccountCommunityBanned(bool)
203	CUser::BIsAccountCommunityBanned(void)
204	CUser::BPromptToVerifyEmail(void)
205	CUser::BPromptToChangePassword(void)
206	CUser::BAccountExtraSecurity(void)
207	CUser::BAccountShouldShowLockUI(void)
208	CUser::GetCountAuthedComputers(void)
209	CUser::BSteamGuardNewMachineNotification(void)
210	CUser::GetSteamGuardHistoryEntry(int,unsigned int *,unsigned int *,bool *,char *,int,char *,int)
211	CUser::GetSteamGuardEnabledTime(void)
212	CUser::SetSteamGuardNewMachineDialogResponse(bool,bool)
213	CUser::SetPhoneIsVerified(bool)
214	CUser::BIsPhoneVerified(void)
215	CUser::SetPhoneIsIdentifying(bool)
216	CUser::BIsPhoneIdentifying(void)
217	CUser::SetPhoneIsRequiringVerification(bool)
218	CUser::BIsPhoneRequiringVerification(void)
219	CUser::SendValidationEmail(void)
220	CUser::BGetAppMinutesPlayed(unsigned int,int *,int *)
221	CUser::GetAppLastPlayedTime(unsigned int)
222	CUser::GetAppUpdateDisabledSecondsRemaining(unsigned int)
223	CUser::SetAppUpdateDisabledSecondsRemaining(unsigned int,unsigned int)
224	CUser::BIsOtherSessionPlaying(unsigned int *)
225	CUser::BKickOtherPlayingSession(void)
226	CUser::BIsGameRunning(CGameID)
227	CUser::BIsGameWindowReady(CGameID)
228	CUser::BIsAnyGameRunning(void)
229	CUser::NumGamesRunning(void)
230	CUser::GetRunningGameID(int)
231	CUser::GetRunningGamePID(int)
232	CUser::RequiresLegacyCDKey(unsigned int,bool *)
233	CUser::RequestLegacyCDKey(unsigned int)
234	CUser::GetLegacyCDKey(unsigned int,char *,int)
235	CUser::WriteLegacyCDKey(unsigned int)
236	CUser::RemoveLegacyCDKey(unsigned int)
237	CUser::RemoveLegacyCDKeysForPackage(unsigned int)
238	CUser::SetLegacyCDKey(unsigned int,char const*)
239	CUser::RequestLegacyCDKeyFromApp(unsigned int,unsigned int,unsigned int)
240	CUser::BGetGuideURL(unsigned int,char *,unsigned int)
241	CUser::AckSystemIM(unsigned long long)
242	CUser::SetClientStat(EClientStat,long long,unsigned int,unsigned int,unsigned int)
243	CUser::BUpdateAppOwnershipTicket(unsigned int,bool,bool)
244	CUser::UpdateAppOwnershipTickets(unsigned int *,unsigned int,bool,bool)
245	CUser::GetMarketingMessageCount(void)
246	CUser::GetMarketingMessage(int,unsigned long long *,char *,int,EMarketingMessageFlags *)
247	CUser::BIsSubscribedApp(unsigned int)
248	CUser::GetSubscribedApps(unsigned int *,unsigned int,bool)
249	CUser::BGameConnectTokensAvailable(void)
250	CUser::GetMicroTxnAppID(unsigned long long)
251	CUser::GetMicroTxnOrderID(unsigned long long)
252	CUser::BGetMicroTxnPrice(unsigned long long,CAmount_t<int> *,CAmount_t<int> *,bool *,CAmount_t<int> *)
253	CUser::GetMicroTxnLineItemCount(unsigned long long)
254	CUser::BGetMicroTxnLineItem(unsigned long long,unsigned int,CAmount_t<int> *,unsigned int *,char *,unsigned int,int *,unsigned char *,CAmount_t<int> *,bool *)
255	CUser::BIsSandboxMicroTxn(unsigned long long,bool *)
256	CUser::BMicroTxnRequiresCachedPmtMethod(unsigned long long,bool *)
257	CUser::BMicroTxnRefundable(unsigned long long)
258	CUser::AuthorizeMicroTxn(unsigned long long,EMicroTxnAuthResponse)
259	CUser::RequestMicroTxnInfo(unsigned long long)
260	CUser::BGetWalletBalance(bool *,CAmount_t<int> *,CAmount_t<int> *)
261	CUser::ChangeTwoFactorAuthOptions(int)
262	CUser::Set2ndFactorAuthCode(char const*,bool)
263	CUser::SetUserMachineName(char const*)
264	CUser::GetUserMachineName(char *,int)
265	CUser::StopStreaming(bool,int)
266	CUser::BIsStreamingUIToRemoteDevice(void)
267	CUser::BIsCurrentlyNVStreaming(void)
268	CUser::RequestStopNVStreaming(void)
269	CUser::OnBigPictureStreamingResult(bool,void *)
270	CUser::OnBigPictureStreamingDone(void)
271	CUser::OnBigPictureStreamRestarting(void)
272	CUser::LockParentalLock(void)
273	CUser::UnlockParentalLock(char const*)
274	CUser::BIsParentalLockEnabled(void)
275	CUser::BIsParentalLockLocked(void)
276	CUser::BlockApp(unsigned int)
277	CUser::UnblockApp(unsigned int)
278	CUser::BIsAppBlocked(unsigned int)
279	CUser::BIsAppInBlockList(unsigned int)
280	CUser::BlockFeature(EParentalFeature)
281	CUser::UnblockFeature(EParentalFeature)
282	CUser::BIsFeatureBlocked(EParentalFeature)
283	CUser::BIsFeatureInBlockList(EParentalFeature)
284	CUser::GetParentalUnlockTime(void)
285	CUser::BGetRecoveryEmail(char *,int)
286	CUser::RequestParentalRecoveryEmail(void)
287	CUser::BGetSerializedParentalSettings(CUtlBuffer *)
288	CUser::BSetParentalSettings(CUtlBuffer *)
289	CUser::BDisableParentalSettings(void)
290	CUser::BGetParentalWebToken(CUtlBuffer *,CUtlBuffer *)
291	CUser::BCanLogonOfflineMode(void)
292	CUser::LogOnOfflineMode(void)
293	CUser::ValidateOfflineLogonTicket(char const*)
294	CUser::BGetOfflineLogonTicket(char const*,COffline_OfflineLogonTicket *)
295	CUser::UploadLocalClientLogs(void)
296	CUser::PerformAccountRecoveryUpload(void)
297	CUser::SetAsyncNotificationEnabled(unsigned int,bool)
298	CUser::BIsAccountLockedDown(void)
