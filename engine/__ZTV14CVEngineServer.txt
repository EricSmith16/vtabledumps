// `vtable for'CVEngineServer
// Auto reconstructed from vtable block @ 0x004EE4A0
// from "engine.dylib", by ida_vtables.idc
0	CVEngineServer::ChangeLevel(char const*,char const*)
1	CVEngineServer::IsMapValid(char const*)
2	CVEngineServer::IsDedicatedServer(void)
3	CVEngineServer::IsInEditMode(void)
4	CVEngineServer::PrecacheModel(char const*,bool)
5	CVEngineServer::PrecacheSentenceFile(char const*,bool)
6	CVEngineServer::PrecacheDecal(char const*,bool)
7	CVEngineServer::PrecacheGeneric(char const*,bool)
8	CVEngineServer::IsModelPrecached(char const*)const
9	CVEngineServer::IsDecalPrecached(char const*)const
10	CVEngineServer::IsGenericPrecached(char const*)const
11	CVEngineServer::GetClusterForOrigin(Vector const&)
12	CVEngineServer::GetPVSForCluster(int,int,unsigned char *)
13	CVEngineServer::CheckOriginInPVS(Vector const&,unsigned char const*,int)
14	CVEngineServer::CheckBoxInPVS(Vector const&,Vector const&,unsigned char const*,int)
15	CVEngineServer::GetPlayerUserId(edict_t const*)
16	CVEngineServer::GetPlayerNetworkIDString(edict_t const*)
17	CVEngineServer::GetEntityCount(void)
18	CVEngineServer::IndexOfEdict(edict_t const*)
19	CVEngineServer::PEntityOfEntIndex(int)
20	CVEngineServer::GetPlayerNetInfo(int)
21	CVEngineServer::CreateEdict(int)
22	CVEngineServer::RemoveEdict(edict_t *)
23	CVEngineServer::PvAllocEntPrivateData(long)
24	CVEngineServer::FreeEntPrivateData(void *)
25	CVEngineServer::SaveAllocMemory(unsigned long,unsigned long)
26	CVEngineServer::SaveFreeMemory(void *)
27	CVEngineServer::EmitAmbientSound(int,Vector const&,char const*,float,soundlevel_t,int,int,float)
28	CVEngineServer::FadeClientVolume(edict_t const*,float,float,float,float)
29	CVEngineServer::SentenceGroupPick(int,char *,int)
30	CVEngineServer::SentenceGroupPickSequential(int,char *,int,int,int)
31	CVEngineServer::SentenceIndexFromName(char const*)
32	CVEngineServer::SentenceNameFromIndex(int)
33	CVEngineServer::SentenceGroupIndexFromName(char const*)
34	CVEngineServer::SentenceGroupNameFromIndex(int)
35	CVEngineServer::SentenceLength(int)
36	CVEngineServer::ServerCommand(char const*)
37	CVEngineServer::ServerExecute(void)
38	CVEngineServer::ClientCommand(edict_t *,char const*,...)
39	CVEngineServer::LightStyle(int,char const*)
40	CVEngineServer::StaticDecal(Vector const&,int,int,int,bool)
41	CVEngineServer::Message_DetermineMulticastRecipients(bool,Vector const&,CBitVec<255> &)
42	CVEngineServer::EntityMessageBegin(int,ServerClass *,bool)
43	CVEngineServer::UserMessageBegin(IRecipientFilter *,int)
44	CVEngineServer::MessageEnd(void)
45	CVEngineServer::ClientPrintf(edict_t *,char const*)
46	CVEngineServer::Con_NPrintf(int,char const*,...)
47	CVEngineServer::Con_NXPrintf(con_nprint_s const*,char const*,...)
48	CVEngineServer::SetView(edict_t const*,edict_t const*)
49	CVEngineServer::Time(void)
50	CVEngineServer::CrosshairAngle(edict_t const*,float,float)
51	CVEngineServer::GetGameDir(char *,int)
52	CVEngineServer::CompareFileTime(char const*,char const*,int *)
53	CVEngineServer::LockNetworkStringTables(bool)
54	CVEngineServer::CreateFakeClient(char const*)
55	CVEngineServer::GetClientConVarValue(int,char const*)
56	CVEngineServer::ParseFile(char const*,char *,int)
57	CVEngineServer::CopyFile(char const*,char const*)
58	CVEngineServer::ResetPVS(unsigned char *,int)
59	CVEngineServer::AddOriginToPVS(Vector const&)
60	CVEngineServer::SetAreaPortalState(int,int)
61	CVEngineServer::PlaybackTempEntity(IRecipientFilter &,float,void const*,SendTable const*,int)
62	CVEngineServer::CheckHeadnodeVisible(int,unsigned char const*,int)
63	CVEngineServer::CheckAreasConnected(int,int)
64	CVEngineServer::GetArea(Vector const&)
65	CVEngineServer::GetAreaBits(int,unsigned char *,int)
66	CVEngineServer::GetAreaPortalPlane(Vector const&,int,VPlane *)
67	CVEngineServer::LoadGameState(char const*,bool)
68	CVEngineServer::LoadAdjacentEnts(char const*,char const*)
69	CVEngineServer::ClearSaveDir(void)
70	CVEngineServer::GetMapEntitiesString(void)
71	CVEngineServer::TextMessageGet(char const*)
72	CVEngineServer::LogPrint(char const*)
73	CVEngineServer::BuildEntityClusterList(edict_t *,PVSInfo_t *)
74	CVEngineServer::SolidMoved(edict_t *,ICollideable *,Vector const*,bool)
75	CVEngineServer::TriggerMoved(edict_t *,bool)
76	CVEngineServer::CreateSpatialPartition(Vector const&,Vector const&)
77	CVEngineServer::DestroySpatialPartition(ISpatialPartition *)
78	CVEngineServer::DrawMapToScratchPad(IScratchPad3D *,unsigned long)
79	CVEngineServer::GetEntityTransmitBitsForClient(int)
80	CVEngineServer::IsPaused(void)
81	CVEngineServer::ForceExactFile(char const*)
82	CVEngineServer::ForceModelBounds(char const*,Vector const&,Vector const&)
83	CVEngineServer::ClearSaveDirAfterClientLoad(void)
84	CVEngineServer::SetFakeClientConVarValue(edict_t *,char const*,char const*)
85	CVEngineServer::ForceSimpleMaterial(char const*)
86	CVEngineServer::IsInCommentaryMode(void)
87	CVEngineServer::SetAreaPortalStates(int const*,int const*,int)
88	CVEngineServer::NotifyEdictFlagsChange(int)
89	CVEngineServer::GetPrevCheckTransmitInfo(edict_t *)
90	CVEngineServer::GetSharedEdictChangeInfo(void)
91	CVEngineServer::AllowImmediateEdictReuse(void)
92	CVEngineServer::IsInternalBuild(void)
93	CVEngineServer::GetChangeAccessor(edict_t const*)
94	CVEngineServer::GetMostRecentlyLoadedFileName(void)
95	CVEngineServer::GetSaveFileName(void)
96	CVEngineServer::MultiplayerEndGame(void)
97	CVEngineServer::ChangeTeam(char const*)
98	CVEngineServer::CleanUpEntityClusterList(PVSInfo_t *)
99	CVEngineServer::SetAchievementMgr(IAchievementMgr *)
100	CVEngineServer::GetAchievementMgr(void)
101	CVEngineServer::GetAppID(void)
102	CVEngineServer::IsLowViolence(void)
103	CVEngineServer::StartQueryCvarValue(edict_t *,char const*)
104	CVEngineServer::InsertServerCommand(char const*)
105	CVEngineServer::GetPlayerInfo(int,player_info_s *)
106	CVEngineServer::IsClientFullyAuthenticated(edict_t *)
107	CVEngineServer::SetDedicatedServerBenchmarkMode(bool)
108	CVEngineServer::SetGamestatsData(CGamestatsData *)
109	CVEngineServer::GetGamestatsData(void)
110	CVEngineServer::GetClientSteamID(edict_t *)
111	CVEngineServer::GetGameServerSteamID(void)
112	CVEngineServer::ClientCommandKeyValues(edict_t *,KeyValues *)
113	CVEngineServer::GetClientSteamIDByPlayerIndex(int)
114	CVEngineServer::GetClusterCount(void)
115	CVEngineServer::GetAllClusterBounds(bbox_t *,int)
116	CVEngineServer::CreateFakeClientEx(char const*,bool)
117	CVEngineServer::GetServerVersion(void)const
118	CVEngineServer::GetServerTime(void)const
119	CVEngineServer::GetIServer(void)
120	CVEngineServer::IsPlayerNameLocked(edict_t const*)
121	CVEngineServer::CanPlayerChangeName(edict_t const*)
122	CVEngineServer::FindMap(char *,int)
123	CVEngineServer::GetReplay(void)
