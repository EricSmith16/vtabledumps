// `vtable for'CGameClient
// Auto reconstructed from vtable block @ 0x004EDBA0
// from "engine.dylib", by ida_vtables.idc
0	CGameClient::~CGameClient()
1	CGameClient::~CGameClient()
2	CBaseClient::FireGameEvent(IGameEvent *)
3	CBaseClient::GetPlayerSlot(void)const
4	CBaseClient::GetUserID(void)const
5	CBaseClient::GetNetworkID(void)const
6	CBaseClient::GetClientName(void)const
7	CBaseClient::GetNetChannel(void)
8	CBaseClient::GetServer(void)
9	CBaseClient::GetUserSetting(char const*)const
10	CBaseClient::GetNetworkIDString(void)const
11	CGameClient::Connect(char const*,int,INetChannel *,bool,int)
12	CGameClient::Inactivate(void)
13	CGameClient::Reconnect(void)
14	CGameClient::Disconnect(char const*,...)
15	CGameClient::SetRate(int,bool)
16	CBaseClient::GetRate(void)const
17	CGameClient::SetUpdateRate(int,bool)
18	CBaseClient::GetUpdateRate(void)const
19	CGameClient::Clear(void)
20	CBaseClient::DemoRestart(void)
21	CBaseClient::GetMaxAckTickCount(void)const
22	CGameClient::ExecuteStringCommand(char const*)
23	CGameClient::SendNetMsg(INetMessage &,bool)
24	CBaseClient::ClientPrintf(char const*,...)
25	CBaseClient::IsConnected(void)const
26	CBaseClient::IsSpawned(void)const
27	CBaseClient::IsActive(void)const
28	CBaseClient::IsFakeClient(void)const
29	CBaseClient::IsHLTV(void)const
30	CBaseClient::IsReplay(void)const
31	CGameClient::IsHearingClient(int)const
32	CGameClient::IsProximityHearingClient(int)const
33	CBaseClient::SetMaxRoutablePayloadSize(int)
34	CBaseClient::IsSplitScreenUser(void)const
35	CBaseClient::ProcessTick(NET_Tick *)
36	CBaseClient::ProcessStringCmd(NET_StringCmd *)
37	CBaseClient::ProcessSetConVar(NET_SetConVar *)
38	CBaseClient::ProcessSignonState(NET_SignonState *)
39	CGameClient::ProcessClientInfo(CLC_ClientInfo *)
40	CBaseClient::ProcessBaselineAck(CLC_BaselineAck *)
41	CBaseClient::ProcessListenEvents(CLC_ListenEvents *)
42	CGameClient::ProcessCmdKeyValues(CLC_CmdKeyValues *)
43	CBaseClient::ConnectionStart(INetChannel *)
44	CGameClient::UpdateAcknowledgedFramecount(int)
45	CGameClient::ShouldSendMessages(void)
46	CBaseClient::UpdateSendState(void)
47	CBaseClient::FillUserInfo(player_info_s &)
48	CGameClient::UpdateUserSettings(void)
49	CGameClient::SetSignonState(int,int)
50	CGameClient::WriteGameSounds(bf_write &)
51	CGameClient::GetDeltaFrame(int)
52	CGameClient::SendSnapshot(CClientFrame *)
53	CBaseClient::SendServerInfo(void)
54	CGameClient::SendSignonData(void)
55	CGameClient::SpawnPlayer(void)
56	CGameClient::ActivatePlayer(void)
57	CBaseClient::SetName(char const*)
58	CBaseClient::SetUserCVar(char const*,char const*)
59	CBaseClient::FreeBaselines(void)
60	CGameClient::IgnoreTempEntity(CEventInfo *)
61	CGameClient::ConnectionClosing(char const*)
62	CGameClient::ConnectionCrashed(char const*)
63	CGameClient::PacketStart(int,int)
64	CGameClient::PacketEnd(void)
65	CGameClient::FileReceived(char const*,unsigned int)
66	CGameClient::FileRequested(char const*,unsigned int)
67	CGameClient::FileDenied(char const*,unsigned int)
68	CGameClient::FileSent(char const*,unsigned int)
69	CGameClient::ProcessMove(CLC_Move *)
70	CGameClient::ProcessVoiceData(CLC_VoiceData *)
71	CGameClient::ProcessRespondCvarValue(CLC_RespondCvarValue *)
72	CGameClient::ProcessFileCRCCheck(CLC_FileCRCCheck *)
73	CGameClient::ProcessFileMD5Check(CLC_FileMD5Check *)
74	CGameClient::ProcessSaveReplay(CLC_SaveReplay *)
