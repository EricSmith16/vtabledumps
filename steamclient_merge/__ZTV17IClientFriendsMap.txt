//=================================
// Merged Vtable - Errors expected 
//=================================
// `vtable for'IClientFriendsMap
// Auto reconstructed from vtable block @ 0x00F0C800
// from "steamclient.dylib", by ida_vtables.idc
0	IClientFriendsMap::GetPersonaName(void)
1	IClientFriendsMap::SetPersonaName(char const*)
2	IClientFriendsMap::SetPersonaNameEx(char const*,bool)
3	IClientFriendsMap::IsPersonaNameSet(void)
4	IClientFriendsMap::GetPersonaState(void)
5	IClientFriendsMap::SetPersonaState(EPersonaState)
6	IClientFriendsMap::NotifyUIOfMenuChange(bool,bool,bool,bool)
7	IClientFriendsMap::GetFriendCount(int)
8	IClientFriendsMap::GetFriendArray(CSteamID *,signed char *,int,int)
9	IClientFriendsMap::GetFriendArrayInGame(CSteamID *,unsigned long long *,int)
10	IClientFriendsMap::GetFriendByIndex(int,int)
11	IClientFriendsMap::GetOnlineFriendCount(void)
12	IClientFriendsMap::GetFriendRelationship(CSteamID)
13	IClientFriendsMap::GetFriendPersonaState(CSteamID)
14	IClientFriendsMap::GetFriendPersonaName(CSteamID)
15	IClientFriendsMap::GetSmallFriendAvatar(CSteamID)
16	IClientFriendsMap::GetMediumFriendAvatar(CSteamID)
17	IClientFriendsMap::GetLargeFriendAvatar(CSteamID)
18	IClientFriendsMap::BGetFriendAvatarURL(char *,unsigned int,CSteamID,EFriendAvatarSize)
19	IClientFriendsMap::SetFriendRegValue(CSteamID,char const*,char const*)
20	IClientFriendsMap::GetFriendRegValue(CSteamID,char const*)
21	IClientFriendsMap::DeleteFriendRegValue(CSteamID,char const*)
22	IClientFriendsMap::GetFriendGamePlayed(CSteamID,FriendGameInfo_t *)
23	IClientFriendsMap::GetFriendGamePlayedExtraInfo(CSteamID)
24	IClientFriendsMap::GetFriendGameServer(CSteamID)
25	IClientFriendsMap::GetFriendPersonaStateFlags(CSteamID)
26	IClientFriendsMap::IsFriendGameOnConsole(CSteamID)
27	IClientFriendsMap::GetFriendSessionStateInfo(CSteamID)
28	IClientFriendsMap::GetFriendRestrictions(CSteamID)
29	IClientFriendsMap::GetFriendPersonaNameHistory(CSteamID,int)
30	IClientFriendsMap::RequestPersonaNameHistory(CSteamID)
31	IClientFriendsMap::GetFriendPersonaNameHistoryAndDate(CSteamID,int,unsigned int *)
32	IClientFriendsMap::AddFriend(CSteamID)
33	IClientFriendsMap::RemoveFriend(CSteamID)
34	IClientFriendsMap::HasFriend(CSteamID,int)
35	IClientFriendsMap::RequestUserInformation(CSteamID,bool)
36	IClientFriendsMap::SetIgnoreFriend(CSteamID,bool)
37	IClientFriendsMap::ReportChatDeclined(CSteamID)
38	IClientFriendsMap::CreateFriendsGroup(char const*)
39	IClientFriendsMap::DeleteFriendsGroup(short)
40	IClientFriendsMap::RenameFriendsGroup(char const*,short)
41	IClientFriendsMap::AddFriendToGroup(CSteamID,short)
42	IClientFriendsMap::RemoveFriendFromGroup(CSteamID,short)
43	IClientFriendsMap::IsFriendMemberOfFriendsGroup(CSteamID,short)
44	IClientFriendsMap::GetFriendsGroupCount(void)
45	IClientFriendsMap::GetFriendsGroupIDByIndex(short)
46	IClientFriendsMap::GetFriendsGroupName(short)
47	IClientFriendsMap::GetFriendsGroupMembershipCount(short)
48	IClientFriendsMap::GetFirstFriendsGroupMember(short)
49	IClientFriendsMap::GetNextFriendsGroupMember(short)
50	IClientFriendsMap::GetGroupFriendsMembershipCount(CSteamID)
51	IClientFriendsMap::GetFirstGroupFriendsMember(CSteamID)
52	IClientFriendsMap::GetNextGroupFriendsMember(CSteamID)
53	IClientFriendsMap::GetPlayerNickname(CSteamID)
54	IClientFriendsMap::SetPlayerNickname(CSteamID,char const*)
55	IClientFriendsMap::GetFriendSteamLevel(CSteamID)
56	IClientFriendsMap::GetChatMessagesCount(CSteamID)
57	IClientFriendsMap::GetChatMessage(CSteamID,int,void *,int,EChatEntryType *,unsigned long long *,unsigned int *)
58	IClientFriendsMap::SendMsgToFriend(CSteamID,EChatEntryType,void const*,int)
59	IClientFriendsMap::ClearChatHistory(CSteamID)
60	IClientFriendsMap::GetKnownClanCount(void)
61	IClientFriendsMap::GetKnownClanByIndex(int)
62	IClientFriendsMap::GetClanCount(void)
63	IClientFriendsMap::GetClanByIndex(int)
64	IClientFriendsMap::GetClanName(CSteamID)
65	IClientFriendsMap::GetClanTag(CSteamID)
66	IClientFriendsMap::GetFriendActivityCounts(int *,int *,bool)
67	IClientFriendsMap::GetClanActivityCounts(CSteamID,int *,int *,int *)
68	IClientFriendsMap::DownloadClanActivityCounts(CSteamID *,int)
69	IClientFriendsMap::GetFriendsGroupActivityCounts(short,int *,int *)
70	IClientFriendsMap::IsClanPublic(CSteamID)
71	IClientFriendsMap::IsClanOfficialGameGroup(CSteamID)
72	IClientFriendsMap::JoinClanChatRoom(CSteamID)
73	IClientFriendsMap::LeaveClanChatRoom(CSteamID)
74	IClientFriendsMap::GetClanChatMemberCount(CSteamID)
75	IClientFriendsMap::GetChatMemberByIndex(CSteamID,int)
76	IClientFriendsMap::SendClanChatMessage(CSteamID,char const*)
77	IClientFriendsMap::GetClanChatMessage(CSteamID,int,void *,int,EChatEntryType *,CSteamID*)
78	IClientFriendsMap::IsClanChatAdmin(CSteamID,CSteamID)
79	IClientFriendsMap::IsClanChatWindowOpenInSteam(CSteamID)
80	IClientFriendsMap::OpenClanChatWindowInSteam(CSteamID)
81	IClientFriendsMap::CloseClanChatWindowInSteam(CSteamID)
82	IClientFriendsMap::SetListenForFriendsMessages(bool)
83	IClientFriendsMap::ReplyToFriendMessage(CSteamID,char const*)
84	IClientFriendsMap::GetFriendMessage(CSteamID,int,void *,int,EChatEntryType *)
85	IClientFriendsMap::InviteFriendToClan(CSteamID,CSteamID)
86	IClientFriendsMap::AcknowledgeInviteToClan(CSteamID,bool)
87	IClientFriendsMap::GetFriendCountFromSource(CSteamID)
88	IClientFriendsMap::GetFriendFromSourceByIndex(CSteamID,int)
89	IClientFriendsMap::IsUserInSource(CSteamID,CSteamID)
90	IClientFriendsMap::GetCoplayFriendCount(void)
91	IClientFriendsMap::GetCoplayFriend(int)
92	IClientFriendsMap::GetFriendCoplayTime(CSteamID)
93	IClientFriendsMap::GetFriendCoplayGame(CSteamID)
94	IClientFriendsMap::SetRichPresence(unsigned int,char const*,char const*)
95	IClientFriendsMap::ClearRichPresence(unsigned int)
96	IClientFriendsMap::GetFriendRichPresence(unsigned int,CSteamID,char const*)
97	IClientFriendsMap::GetFriendRichPresenceKeyCount(unsigned int,CSteamID)
98	IClientFriendsMap::GetFriendRichPresenceKeyByIndex(unsigned int,CSteamID,int)
99	IClientFriendsMap::RequestFriendRichPresence(unsigned int,CSteamID)
100	IClientFriendsMap::JoinChatRoom(CSteamID)
101	IClientFriendsMap::LeaveChatRoom(CSteamID)
102	IClientFriendsMap::InviteUserToChatRoom(CSteamID,CSteamID)
103	IClientFriendsMap::SendChatMsg(CSteamID,EChatEntryType,void const*,int)
104	IClientFriendsMap::GetChatRoomMessagesCount(CSteamID)
105	IClientFriendsMap::GetChatRoomEntry(CSteamID,int,CSteamID*,void *,int,EChatEntryType *)
106	IClientFriendsMap::ClearChatRoomHistory(CSteamID)
107	IClientFriendsMap::SerializeChatRoomDlg(CSteamID,void const*,int)
108	IClientFriendsMap::GetSizeOfSerializedChatRoomDlg(CSteamID)
109	IClientFriendsMap::GetSerializedChatRoomDlg(CSteamID,void *,int,int *,EChatRoomType *)
110	IClientFriendsMap::ClearSerializedChatRoomDlg(CSteamID)
111	IClientFriendsMap::KickChatMember(CSteamID,CSteamID)
112	IClientFriendsMap::BanChatMember(CSteamID,CSteamID)
113	IClientFriendsMap::UnBanChatMember(CSteamID,CSteamID)
114	IClientFriendsMap::SetChatRoomType(CSteamID,ELobbyType)
115	IClientFriendsMap::GetChatRoomLockState(CSteamID,bool *)
116	IClientFriendsMap::GetChatRoomPermissions(CSteamID,unsigned int *)
117	IClientFriendsMap::SetChatRoomModerated(CSteamID,bool)
118	IClientFriendsMap::BChatRoomModerated(CSteamID)
119	IClientFriendsMap::NotifyChatRoomDlgsOfUIChange(CSteamID,bool,bool,bool,bool)
120	IClientFriendsMap::TerminateChatRoom(CSteamID)
121	IClientFriendsMap::GetChatRoomCount(void)
122	IClientFriendsMap::GetChatRoomByIndex(int)
123	IClientFriendsMap::GetChatRoomName(CSteamID)
124	IClientFriendsMap::BGetChatRoomMemberDetails(CSteamID,CSteamID,unsigned int *,unsigned int *)
125	IClientFriendsMap::CreateChatRoom(EChatRoomType,unsigned long long,char const*,ELobbyType,CSteamID,CSteamID,CSteamID,unsigned int,unsigned int,unsigned int)
126	IClientFriendsMap::VoiceCallNew(CSteamID,CSteamID)
127	IClientFriendsMap::VoiceCall(CSteamID,CSteamID)
128	IClientFriendsMap::VoiceHangUp(CSteamID,int)
129	IClientFriendsMap::SetVoiceSpeakerVolume(float)
130	IClientFriendsMap::SetVoiceMicrophoneVolume(float)
131	IClientFriendsMap::SetAutoAnswer(bool)
132	IClientFriendsMap::VoiceAnswer(int)
133	IClientFriendsMap::AcceptVoiceCall(CSteamID,CSteamID)
134	IClientFriendsMap::VoicePutOnHold(int,bool)
135	IClientFriendsMap::BVoiceIsLocalOnHold(int)
136	IClientFriendsMap::BVoiceIsRemoteOnHold(int)
137	IClientFriendsMap::SetDoNotDisturb(bool)
138	IClientFriendsMap::EnableVoiceNotificationSounds(bool)
139	IClientFriendsMap::SetPushToTalkEnabled(bool)
140	IClientFriendsMap::IsPushToTalkEnabled(void)
141	IClientFriendsMap::SetPushToTalkKey(int)
142	IClientFriendsMap::GetPushToTalkKey(void)
143	IClientFriendsMap::IsPushToTalkKeyDown(void)
144	IClientFriendsMap::EnableVoiceCalibration(bool)
145	IClientFriendsMap::IsVoiceCalibrating(void)
146	IClientFriendsMap::GetVoiceCalibrationSamplePeak(void)
147	IClientFriendsMap::SetMicBoost(bool)
148	IClientFriendsMap::GetMicBoost(void)
149	IClientFriendsMap::HasHardwareMicBoost(void)
150	IClientFriendsMap::GetMicDeviceName(void)
151	IClientFriendsMap::StartTalking(int)
152	IClientFriendsMap::EndTalking(int)
153	IClientFriendsMap::VoiceIsValid(int)
154	IClientFriendsMap::SetAutoReflectVoice(bool)
155	IClientFriendsMap::GetCallState(int)
156	IClientFriendsMap::GetVoiceMicrophoneVolume(void)
157	IClientFriendsMap::GetVoiceSpeakerVolume(void)
158	IClientFriendsMap::TimeSinceLastVoiceDataReceived(int)
159	IClientFriendsMap::TimeSinceLastVoiceDataSend(int)
160	IClientFriendsMap::BCanSend(int)
161	IClientFriendsMap::BCanReceive(int)
162	IClientFriendsMap::GetEstimatedBitsPerSecond(int,bool)
163	IClientFriendsMap::GetPeakSample(int,bool)
164	IClientFriendsMap::SendResumeRequest(int)
165	IClientFriendsMap::OpenChatDialog(CSteamID)
166	IClientFriendsMap::StartChatRoomVoiceSpeaking(CSteamID,CSteamID)
167	IClientFriendsMap::EndChatRoomVoiceSpeaking(CSteamID,CSteamID)
168	IClientFriendsMap::GetFriendLastLogonTime(CSteamID)
169	IClientFriendsMap::GetFriendLastLogoffTime(CSteamID)
170	IClientFriendsMap::GetChatRoomVoiceTotalSlotCount(CSteamID)
171	IClientFriendsMap::GetChatRoomVoiceUsedSlotCount(CSteamID)
172	IClientFriendsMap::GetChatRoomVoiceUsedSlot(CSteamID,int)
173	IClientFriendsMap::GetChatRoomVoiceStatus(CSteamID,CSteamID)
174	IClientFriendsMap::BChatRoomHasAvailableVoiceSlots(CSteamID)
175	IClientFriendsMap::BIsChatRoomVoiceSpeaking(CSteamID,CSteamID)
176	IClientFriendsMap::GetChatRoomPeakSample(CSteamID,CSteamID,bool)
177	IClientFriendsMap::ChatRoomVoiceRetryConnections(CSteamID)
178	IClientFriendsMap::SetPortTypes(unsigned int)
179	IClientFriendsMap::ReinitAudio(void)
180	IClientFriendsMap::SetInGameVoiceSpeaking(CSteamID,bool)
181	IClientFriendsMap::IsInGameVoiceSpeaking(void)
182	IClientFriendsMap::ActivateGameOverlay(char const*)
183	IClientFriendsMap::ActivateGameOverlayToUser(char const*,CSteamID)
184	IClientFriendsMap::ActivateGameOverlayToWebPage(char const*)
185	IClientFriendsMap::ActivateGameOverlayToStore(unsigned int,EOverlayToStoreFlag)
186	IClientFriendsMap::ActivateGameOverlayInviteDialog(CSteamID)
187	IClientFriendsMap::NotifyGameOverlayStateChanged(bool)
188	IClientFriendsMap::NotifyGameServerChangeRequested(char const*,char const*)
189	IClientFriendsMap::NotifyLobbyJoinRequested(unsigned int,CSteamID,CSteamID)
190	IClientFriendsMap::NotifyRichPresenceJoinRequested(unsigned int,CSteamID,char const*)
191	IClientFriendsMap::GetClanRelationship(CSteamID)
192	IClientFriendsMap::GetFriendClanRank(CSteamID,CSteamID)
193	IClientFriendsMap::VoiceIsAvailable(void)
194	IClientFriendsMap::TestVoiceDisconnect(int)
195	IClientFriendsMap::TestChatRoomPeerDisconnect(CSteamID,CSteamID)
196	IClientFriendsMap::TestVoicePacketLoss(float)
197	IClientFriendsMap::FindFriendVoiceChatHandle(CSteamID)
198	IClientFriendsMap::RequestFriendsWhoPlayGame(CGameID)
199	IClientFriendsMap::GetCountFriendsWhoPlayGame(CGameID)
200	IClientFriendsMap::GetFriendWhoPlaysGame(unsigned int,CGameID)
201	IClientFriendsMap::SetPlayedWith(CSteamID)
202	IClientFriendsMap::RequestClanOfficerList(CSteamID)
203	IClientFriendsMap::GetClanOwner(CSteamID)
204	IClientFriendsMap::GetClanOfficerCount(CSteamID)
205	IClientFriendsMap::GetClanOfficerByIndex(CSteamID,int)
206	IClientFriendsMap::GetUserRestrictions(void)
207	IClientFriendsMap::RequestFriendProfileInfo(CSteamID)
208	IClientFriendsMap::GetFriendProfileInfo(CSteamID,char const*)
209	IClientFriendsMap::InviteUserToGame(CSteamID,char const*,unsigned int)
210	IClientFriendsMap::GetOnlineConsoleFriendCount(void)
211	IClientFriendsMap::RequestTrade(CSteamID)
212	IClientFriendsMap::TradeResponse(unsigned int,bool)
213	IClientFriendsMap::CancelTradeRequest(CSteamID)
214	IClientFriendsMap::HideFriend(CSteamID,bool)
215	IClientFriendsMap::GetFollowerCount(CSteamID)
216	IClientFriendsMap::IsFollowing(CSteamID)
217	IClientFriendsMap::EnumerateFollowingList(unsigned int)
218	IClientFriendsMap::RequestFriendMessageHistory(CSteamID)
219	IClientFriendsMap::RequestFriendMessageHistoryForOfflineMessages(void)
220	IClientFriendsMap::GetCountFriendsWithOfflineMessages(void)
221	IClientFriendsMap::GetFriendWithOfflineMessage(int)
222	IClientFriendsMap::ClearFriendHasOfflineMessage(unsigned int)
223	IClientFriendsMap::RequestEmoticonList(void)
224	IClientFriendsMap::GetEmoticonCount(void)
225	IClientFriendsMap::GetEmoticonName(int)
226	IClientFriendsMap::ClientLinkFilterInit(void)
227	IClientFriendsMap::LinkDisposition(char const*)

