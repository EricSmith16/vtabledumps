// `vtable for'CryptoPP::IteratedHashWithStaticTransform<unsigned int,CryptoPP::EnumToType<CryptoPP::ByteOrder,1>,64u,32u,CryptoPP::SHA256,32u,true>
// Auto reconstructed from vtable block @ 0x01015F40
// from "client.dylib", by ida_vtables.idc
0	CryptoPP::IteratedHashWithStaticTransform<unsigned int,CryptoPP::EnumToType<CryptoPP::ByteOrder,1>,64u,32u,CryptoPP::SHA256,32u,true>::~IteratedHashWithStaticTransform()
1	CryptoPP::IteratedHashWithStaticTransform<unsigned int,CryptoPP::EnumToType<CryptoPP::ByteOrder,1>,64u,32u,CryptoPP::SHA256,32u,true>::~IteratedHashWithStaticTransform()
2	CryptoPP::ClonableImpl<CryptoPP::SHA256,CryptoPP::AlgorithmImpl<CryptoPP::IteratedHash<unsigned int,CryptoPP::EnumToType<CryptoPP::ByteOrder,1>,64u,CryptoPP::HashTransformation>,CryptoPP::SHA256>>::Clone(void)const
3	CryptoPP::AlgorithmImpl<CryptoPP::IteratedHash<unsigned int,CryptoPP::EnumToType<CryptoPP::ByteOrder,1>,64u,CryptoPP::HashTransformation>,CryptoPP::SHA256>::AlgorithmName(void)const
4	CryptoPP::IteratedHashBase<unsigned int,CryptoPP::HashTransformation>::Update(unsigned char const*,unsigned long)
5	CryptoPP::IteratedHashBase<unsigned int,CryptoPP::HashTransformation>::CreateUpdateSpace(unsigned long &)
6	CryptoPP::HashTransformation::Final(unsigned char *)
7	CryptoPP::IteratedHashBase<unsigned int,CryptoPP::HashTransformation>::Restart(void)
8	CryptoPP::IteratedHashWithStaticTransform<unsigned int,CryptoPP::EnumToType<CryptoPP::ByteOrder,1>,64u,32u,CryptoPP::SHA256,32u,true>::DigestSize(void)const
9	CryptoPP::IteratedHash<unsigned int,CryptoPP::EnumToType<CryptoPP::ByteOrder,1>,64u,CryptoPP::HashTransformation>::BlockSize(void)const
10	CryptoPP::IteratedHashBase<unsigned int,CryptoPP::HashTransformation>::OptimalBlockSize(void)const
11	CryptoPP::IteratedHashBase<unsigned int,CryptoPP::HashTransformation>::OptimalDataAlignment(void)const
12	CryptoPP::HashTransformation::CalculateDigest(unsigned char *,unsigned char const*,unsigned long)
13	CryptoPP::HashTransformation::Verify(unsigned char const*)
14	CryptoPP::HashTransformation::VerifyDigest(unsigned char const*,unsigned char const*,unsigned long)
15	CryptoPP::IteratedHashBase<unsigned int,CryptoPP::HashTransformation>::TruncatedFinal(unsigned char *,unsigned long)
16	CryptoPP::HashTransformation::CalculateTruncatedDigest(unsigned char *,unsigned long,unsigned char const*,unsigned long)
17	CryptoPP::HashTransformation::TruncatedVerify(unsigned char const*,unsigned long)
18	CryptoPP::HashTransformation::VerifyTruncatedDigest(unsigned char const*,unsigned long,unsigned char const*,unsigned long)
19	CryptoPP::IteratedHashWithStaticTransform<unsigned int,CryptoPP::EnumToType<CryptoPP::ByteOrder,1>,64u,32u,CryptoPP::SHA256,32u,true>::Init(void)
20	CryptoPP::IteratedHash<unsigned int,CryptoPP::EnumToType<CryptoPP::ByteOrder,1>,64u,CryptoPP::HashTransformation>::GetByteOrder(void)const
21	CryptoPP::IteratedHashWithStaticTransform<unsigned int,CryptoPP::EnumToType<CryptoPP::ByteOrder,1>,64u,32u,CryptoPP::SHA256,32u,true>::HashEndianCorrectedBlock(unsigned int const*)
22	CryptoPP::IteratedHashBase<unsigned int,CryptoPP::HashTransformation>::HashMultipleBlocks(unsigned int const*,unsigned long)
23	CryptoPP::IteratedHash<unsigned int,CryptoPP::EnumToType<CryptoPP::ByteOrder,1>,64u,CryptoPP::HashTransformation>::DataBuf(void)
24	CryptoPP::IteratedHashWithStaticTransform<unsigned int,CryptoPP::EnumToType<CryptoPP::ByteOrder,1>,64u,32u,CryptoPP::SHA256,32u,true>::StateBuf(void)
