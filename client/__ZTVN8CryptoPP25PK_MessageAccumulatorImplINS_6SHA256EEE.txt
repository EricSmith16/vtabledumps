// `vtable for'CryptoPP::PK_MessageAccumulatorImpl<CryptoPP::SHA256>
// Auto reconstructed from vtable block @ 0x01016040
// from "client.dylib", by ida_vtables.idc
0	CryptoPP::PK_MessageAccumulatorImpl<CryptoPP::SHA256>::~PK_MessageAccumulatorImpl()
1	CryptoPP::PK_MessageAccumulatorImpl<CryptoPP::SHA256>::~PK_MessageAccumulatorImpl()
2	CryptoPP::Clonable::Clone(void)const
3	CryptoPP::Algorithm::AlgorithmName(void)const
4	CryptoPP::PK_MessageAccumulatorBase::Update(unsigned char const*,unsigned long)
5	CryptoPP::HashTransformation::CreateUpdateSpace(unsigned long &)
6	CryptoPP::HashTransformation::Final(unsigned char *)
7	CryptoPP::HashTransformation::Restart(void)
8	CryptoPP::PK_MessageAccumulator::DigestSize(void)const
9	CryptoPP::HashTransformation::BlockSize(void)const
10	CryptoPP::HashTransformation::OptimalBlockSize(void)const
11	CryptoPP::HashTransformation::OptimalDataAlignment(void)const
12	CryptoPP::HashTransformation::CalculateDigest(unsigned char *,unsigned char const*,unsigned long)
13	CryptoPP::HashTransformation::Verify(unsigned char const*)
14	CryptoPP::HashTransformation::VerifyDigest(unsigned char const*,unsigned char const*,unsigned long)
15	CryptoPP::PK_MessageAccumulator::TruncatedFinal(unsigned char *,unsigned long)
16	CryptoPP::HashTransformation::CalculateTruncatedDigest(unsigned char *,unsigned long,unsigned char const*,unsigned long)
17	CryptoPP::HashTransformation::TruncatedVerify(unsigned char const*,unsigned long)
18	CryptoPP::HashTransformation::VerifyTruncatedDigest(unsigned char const*,unsigned long,unsigned char const*,unsigned long)
19	CryptoPP::PK_MessageAccumulatorImpl<CryptoPP::SHA256>::AccessHash(void)
