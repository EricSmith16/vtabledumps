// `vtable for'C_TFPlayer
// Auto reconstructed from vtable block @ 0x00F3DD20
// from "client.dylib", by ida_vtables.idc
0	C_TFPlayer::~C_TFPlayer()
1	C_TFPlayer::~C_TFPlayer()
2	C_BaseEntity::SetRefEHandle(CBaseHandle const&)
3	C_BaseEntity::GetRefEHandle(void)const
4	C_BaseEntity::GetCollideable(void)
5	C_BaseEntity::GetClientNetworkable(void)
6	C_BaseEntity::GetClientRenderable(void)
7	C_BaseEntity::GetIClientEntity(void)
8	C_BaseEntity::GetBaseEntity(void)
9	C_BaseEntity::GetClientThinkable(void)
10	C_BaseAnimating::Release(void)
11	C_BaseEntity::GetAbsOrigin(void)const
12	C_BaseEntity::GetAbsAngles(void)const
13	C_BaseAnimating::GetMouth(void)
14	C_BaseFlex::GetSoundSpatialization(SpatializationInfo_t &)
15	C_BaseEntity::GetDataDescMap(void)
16	C_TFPlayer::YouForgotToImplementOrDeclareClientClass(void)
17	C_TFPlayer::GetClientClass(void)
18	C_TFPlayer::GetPredDescMap(void)
19	C_BaseEntity::FireBullets(FireBulletsInfo_t const&)
20	C_BaseEntity::ModifyFireBulletsDamage(CTakeDamageInfo *)
21	C_BaseEntity::ShouldDrawUnderwaterBulletBubbles(void)
22	C_BaseEntity::ShouldDrawWaterImpacts(void)
23	C_BaseEntity::HandleShotImpactingWater(FireBulletsInfo_t const&,Vector const&,ITraceFilter *,Vector*)
24	C_BaseEntity::GetBeamTraceFilter(void)
25	C_BaseEntity::DispatchTraceAttack(CTakeDamageInfo const&,Vector const&,CGameTrace *,CDmgAccumulator *)
26	C_BaseEntity::TraceAttack(CTakeDamageInfo const&,Vector const&,CGameTrace *,CDmgAccumulator *)
27	C_BaseEntity::DoImpactEffect(CGameTrace &,int)
28	C_BasePlayer::MakeTracer(Vector const&,CGameTrace const&,int)
29	C_BaseEntity::GetTracerAttachment(void)
30	C_BaseCombatCharacter::BloodColor(void)
31	C_BasePlayer::GetTracerType(void)
32	C_TFPlayer::Spawn(void)
33	C_BaseEntity::SpawnClientEntity(void)
34	C_BaseEntity::Precache(void)
35	C_BaseEntity::Activate(void)
36	C_BaseEntity::ParseMapData(CEntityMapData *)
37	C_BaseEntity::KeyValue(char const*,char const*)
38	C_BaseEntity::KeyValue(char const*,float)
39	C_BaseEntity::KeyValue(char const*,Vector const&)
40	C_BaseEntity::GetKeyValue(char const*,char *,int)
41	C_BaseEntity::Init(int,int)
42	C_BaseEntity::GetIClientUnknown(void)
43	C_BaseAnimating::GetBaseAnimating(void)
44	C_BaseEntity::SetClassname(char const*)
45	C_BaseEntity::RecordToolMessage(void)
46	C_TFPlayer::GetRenderOrigin(void)
47	C_TFPlayer::GetRenderAngles(void)
48	C_TFPlayer::GetObserverCamOrigin(void)
49	C_BaseEntity::RenderableToWorldTransform(void)
50	C_BaseEntity::IsTransparent(void)
51	C_BaseEntity::IsTwoPass(void)
52	C_BaseAnimating::UsesPowerOfTwoFrameBufferTexture(void)
53	C_BaseEntity::UsesFullFrameBufferTexture(void)
54	C_BaseEntity::IgnoresZBuffer(void)const
55	C_BaseEntity::GetModel(void)const
56	C_TFPlayer::DrawModel(int)
57	C_TFPlayer::ComputeFxBlend(void)
58	C_BaseEntity::GetFxBlend(void)
59	C_BaseEntity::LODTest(void)
60	C_TFPlayer::GetRenderBounds(Vector &,Vector &)
61	C_BaseEntity::GetPVSNotifyInterface(void)
62	C_BaseEntity::GetRenderBoundsWorldspace(Vector &,Vector &)
63	C_TFPlayer::GetShadowRenderBounds(Vector &,Vector &,ShadowType_t)
64	C_BaseEntity::GetColorModulation(float *)
65	C_BaseFlex::OnThreadedDrawSetup(void)
66	C_BaseAnimating::TestCollision(Ray_t const&,unsigned int,CGameTrace &)
67	C_BaseAnimating::TestHitboxes(Ray_t const&,unsigned int,CGameTrace &)
68	C_BaseEntity::GetAttackDamageScale(void)
69	C_TFPlayer::NotifyShouldTransmit(ShouldTransmitState_t)
70	C_BasePlayer::PreDataUpdate(DataUpdateType_t)
71	C_BasePlayer::PostDataUpdate(DataUpdateType_t)
72	C_BaseEntity::OnDataUnchangedInPVS(void)
73	C_TFPlayer::ValidateModelIndex(void)
74	C_TFPlayer::SetDormant(bool)
75	C_BaseEntity::IsDormant(void)
76	C_BaseEntity::SetDestroyedOnRecreateEntities(void)
77	C_BaseEntity::GetEFlags(void)const
78	C_BaseEntity::SetEFlags(int)
79	C_BaseEntity::entindex(void)const
80	C_BasePlayer::ReceiveMessage(int,bf_read &)
81	C_BaseEntity::GetDataTableBasePtr(void)
82	C_TFPlayer::ClientThink(void)
83	C_BaseEntity::GetThinkHandle(void)
84	C_BaseEntity::SetThinkHandle(CClientThinkHandlePtr *)
85	C_BaseEntity::ShouldSavePhysics(void)
86	C_BaseEntity::OnSave(void)
87	C_BasePlayer::OnRestore(void)
88	C_BaseEntity::ObjectCaps(void)
89	C_BaseEntity::Save(ISave &)
90	C_BaseEntity::Restore(IRestore &)
91	C_BaseEntity::CreateVPhysics(void)
92	C_BaseEntity::VPhysicsDestroyObject(void)
93	C_BaseAnimating::VPhysicsUpdate(IPhysicsObject *)
94	C_BaseAnimating::VPhysicsGetObjectList(IPhysicsObject **,int)
95	C_BaseEntity::VPhysicsIsFlesh(void)
96	C_BaseAnimating::SetupBones(matrix3x4_t *,int,int,float)
97	C_BaseFlex::SetupWeights(matrix3x4_t const*,int,float *,float *)
98	C_BaseFlex::UsesFlexDelayedWeights(void)
99	C_BaseEntity::DoAnimationEvents(void)
100	C_BasePlayer::AddEntity(void)
101	C_BaseEntity::GetPrevLocalOrigin(void)const
102	C_BaseEntity::GetPrevLocalAngles(void)const
103	C_BaseEntity::CalcOverrideModelIndex(void)
104	C_BaseEntity::WorldAlignMins(void)const
105	C_BaseEntity::WorldAlignMaxs(void)const
106	C_BaseEntity::WorldSpaceCenter(void)const
107	C_BaseEntity::ComputeWorldSpaceSurroundingBox(Vector *,Vector *)
108	C_BaseEntity::GetHealthBarHeightOffset(void)const
109	C_BaseEntity::GetSolid(void)const
110	C_BaseEntity::GetSolidFlags(void)const
111	C_BaseAnimating::LookupAttachment(char const*)
112	C_BaseAnimating::GetAttachment(int,matrix3x4_t &)
113	C_BaseAnimating::GetAttachment(int,Vector &)
114	C_BaseAnimating::GetAttachment(int,Vector &,QAngle &)
115	C_BaseAnimating::GetAttachmentVelocity(int,Vector &,Quaternion &)
116	C_BaseEntity::GetTeam(void)
117	C_BaseEntity::GetTeamNumber(void)const
118	C_BaseEntity::ChangeTeam(int)
119	C_TFPlayer::GetRenderTeamNumber(void)
120	C_BaseEntity::InSameTeam(C_BaseEntity*)
121	C_BaseEntity::InLocalTeam(void)
122	C_BaseEntity::IsValidIDTarget(void)
123	C_BaseEntity::GetIDString(void)
124	C_TFPlayer::ModifyEmitSoundParams(EmitSound_t &)
125	C_BaseEntity::InitializeAsClientEntity(char const*,RenderGroup_t)
126	C_TFPlayer::Simulate(void)
127	C_TFPlayer::OnDataChanged(DataUpdateType_t)
128	C_TFPlayer::OnPreDataChanged(DataUpdateType_t)
129	C_BaseEntity::GetClientVehicle(void)
130	C_BaseAnimating::GetAimEntOrigin(IClientEntity *,Vector *,QAngle *)
131	C_BaseEntity::GetOldOrigin(void)
132	C_BaseEntity::GetRenderGroup(void)
133	C_TFPlayer::GetToolRecordingState(KeyValues *)
134	C_BaseAnimating::CleanupToolRecordingState(KeyValues *)
135	C_BaseAnimating::GetCollideType(void)
136	C_TFPlayer::ShouldDraw(void)
137	C_BaseEntity::UpdateVisibility(void)
138	C_BaseAnimating::IsSelfAnimating(void)
139	C_BaseEntity::OnLatchInterpolatedVariables(int)
140	C_TFPlayer::OnNewModel(void)
141	C_BaseEntity::OnNewParticleEffect(char const*,CNewParticleEffect *)
142	C_BaseAnimating::ResetLatched(void)
143	C_BaseAnimating::Interpolate(float)
144	C_BaseEntity::IsSubModel(void)
145	C_BaseEntity::CreateLightEffects(void)
146	C_BaseAnimating::Clear(void)
147	C_BaseEntity::DrawBrushModel(bool,int,bool)
148	C_BaseEntity::GetTextureAnimationStartTime(void)
149	C_BaseEntity::TextureAnimationWrapped(void)
150	C_BaseEntity::SetNextClientThink(float)
151	C_BaseEntity::SetHealth(int)
152	C_BasePlayer::GetHealth(void)const
153	C_TFPlayer::GetMaxHealth(void)const
154	C_BaseEntity::IsVisibleToTargetID(void)const
155	C_TFPlayer::IsHealthBarVisible(void)const
156	C_TFPlayer::ShadowCastType(void)
157	C_BasePlayer::ShouldReceiveProjectedTextures(int)
158	C_BaseEntity::IsShadowDirty(void)
159	C_BaseEntity::MarkShadowDirty(bool)
160	C_BaseEntity::GetShadowParent(void)
161	C_BaseEntity::FirstShadowChild(void)
162	C_BaseEntity::NextShadowPeer(void)
163	C_TFPlayer::AddDecal(Vector const&,Vector const&,Vector const&,int,int,bool,CGameTrace &,int)
164	C_BaseEntity::AddColoredDecal(Vector const&,Vector const&,Vector const&,int,int,bool,CGameTrace &,Color,int)
165	C_BaseEntity::IsClientCreated(void)const
166	C_TFPlayer::UpdateOnRemove(void)
167	C_BaseEntity::SUB_Remove(void)
168	C_BaseAnimating::SetPredictable(bool)
169	C_BaseAnimating::RestoreData(char const*,int,int)
170	C_BaseEntity::DamageDecal(int,int)
171	C_BaseEntity::DecalTrace(CGameTrace *,char const*)
172	C_BaseEntity::ImpactTrace(CGameTrace *,int,char const*)
173	C_BasePlayer::ShouldPredict(void)
174	C_BaseEntity::Think(void)
175	C_BaseEntity::CanBePoweredUp(void)
176	C_BaseEntity::AttemptToPowerup(int,float,float,C_BaseEntity*,CDamageModifier *)
177	C_BaseEntity::IsCurrentlyTouching(void)const
178	C_BaseEntity::StartTouch(C_BaseEntity*)
179	C_TFPlayer::Touch(C_BaseEntity *)
180	C_BaseEntity::EndTouch(C_BaseEntity*)
181	C_BasePlayer::PhysicsSolidMaskForEntity(void)const
182	C_BasePlayer::PhysicsSimulate(void)
183	C_BaseEntity::IsAlive(void)
184	C_BasePlayer::IsPlayer(void)const
185	C_BaseCombatCharacter::IsBaseCombatCharacter(void)
186	C_BaseCombatCharacter::MyCombatCharacterPointer(void)
187	C_BaseEntity::IsNPC(void)
188	C_BaseEntity::IsNextBot(void)
189	C_BaseEntity::IsBaseObject(void)const
190	C_BaseEntity::IsBaseCombatWeapon(void)const
191	C_BaseEntity::MyCombatWeaponPointer(void)
192	C_BaseEntity::IsCombatItem(void)const
193	C_BaseEntity::IsBaseTrain(void)const
194	C_BasePlayer::EyePosition(void)
195	C_TFPlayer::EyeAngles(void)
196	C_BasePlayer::LocalEyeAngles(void)
197	C_BaseEntity::EarPosition(void)
198	C_TFPlayer::ShouldCollide(int,int)const
199	C_BaseEntity::GetViewOffset(void)const
200	C_BaseEntity::SetViewOffset(Vector const&)
201	C_TFPlayer::GetBody(void)
202	C_TFPlayer::GetSkin(void)
203	C_BaseEntity::GetModelInstance(void)
204	C_BaseEntity::GetShadowHandle(void)const
205	C_BaseEntity::RenderHandle(void)
206	C_BaseEntity::CreateModelInstance(void)
207	C_BasePlayer::ShouldInterpolate(void)
208	C_BaseAnimating::GetClientSideFade(void)
209	C_BaseEntity::BoneMergeFastCullBloat(Vector &,Vector &,Vector const&,Vector const&)const
210	C_BaseEntity::OnPredictedEntityRemove(bool,C_BaseEntity*)
211	C_BaseEntity::GetShadowCastDistance(float *,ShadowType_t)const
212	C_TFPlayer::GetShadowCastDirection(Vector *,ShadowType_t)const
213	C_BaseEntity::GetShadowUseOtherEntity(void)const
214	C_BaseEntity::SetShadowUseOtherEntity(C_BaseEntity*)
215	C_BaseEntity::AddRagdollToFadeQueue(void)
216	C_BaseEntity::IsDeflectable(void)
217	C_BaseAnimating::GetStudioBody(void)
218	C_BaseEntity::PerformCustomPhysics(Vector *,Vector *,QAngle *,QAngle *)
219	C_BaseEntity::GetRenderClipPlane(void)
220	C_BaseEntity::ValidateEntityAttachedToPlayer(bool &)
221	C_BaseAnimating::GetBoneControllers(float *)
222	C_BaseAnimating::SetBoneController(int,float)
223	C_BaseAnimating::GetPoseParameters(CStudioHdr *,float *)
224	C_TFPlayer::BuildTransformations(CStudioHdr *,Vector *,Quaternion *,matrix3x4_t const&,int,CBoneBitList &)
225	C_TFPlayer::ApplyBoneMatrixTransform(matrix3x4_t &)
226	C_BaseAnimating::UpdateIKLocks(float)
227	C_BaseAnimating::CalculateIKLocks(float)
228	C_BaseAnimating::InternalDrawModel(int)
229	C_BaseAnimating::OnInternalDrawModel(ClientModelRenderInfo_t *)
230	C_BaseAnimating::OnPostInternalDrawModel(ClientModelRenderInfo_t *)
231	C_BaseAnimating::GetEconWeaponMaterialOverride(int)
232	C_BaseAnimating::ControlMouth(CStudioHdr *)
233	C_BaseAnimatingOverlay::DoAnimationEvents(CStudioHdr *)
234	C_TFPlayer::FireEvent(Vector const&,QAngle const&,int,char const*)
235	C_BaseAnimating::FireObsoleteEvent(Vector const&,QAngle const&,int,char const*)
236	C_TFPlayer::ModifyEventParticles(char const*)
237	C_BaseAnimating::DispatchMuzzleEffect(char const*,bool)
238	C_BaseFlex::StandardBlendingRules(CStudioHdr *,Vector *,Quaternion *,float,int)
239	C_BaseAnimatingOverlay::AccumulateLayers(IBoneSetup &,Vector *,Quaternion *,float)
240	C_BaseAnimating::ChildLayerBlend(Vector *,Quaternion *,float,int)
241	C_BaseAnimating::AttachEntityToBone(C_BaseAnimating*,int,Vector,QAngle)
242	C_BaseAnimating::NotifyBoneAttached(C_BaseAnimating*)
243	C_BaseAnimating::UpdateBoneAttachments(void)
244	C_TFPlayer::BecomeRagdollOnClient(void)
245	C_BaseAnimating::SaveRagdollInfo(int,matrix3x4_t const&,CBoneAccessor &)
246	C_BaseAnimating::RetrieveRagdollInfo(Vector *,Quaternion *)
247	C_BasePlayer::GetRagdollInitBoneArrays(matrix3x4_t *,matrix3x4_t *,matrix3x4_t *,float)
248	C_BaseAnimating::RefreshCollisionBounds(void)
249	C_BaseAnimating::SetSequence(int)
250	C_BaseAnimating::StudioFrameAdvance(void)
251	C_BaseAnimating::FrameAdvance(float)
252	C_BaseAnimating::GetSequenceCycleRate(CStudioHdr *,int)
253	C_TFPlayer::UpdateClientSideAnimation(void)
254	C_BaseAnimating::ComputeClientSideAnimationFlags(void)
255	C_BaseAnimating::ResetClientsideFrame(void)
256	C_BaseAnimating::IsActivityFinished(void)
257	C_BaseAnimating::UncorrectViewModelAttachment(Vector &)
258	C_BasePlayer::DoMuzzleFlash(void)
259	C_TFPlayer::ProcessMuzzleFlashEvent(void)
260	C_BaseAnimating::SetServerIntendedCycle(float)
261	C_BaseAnimating::GetServerIntendedCycle(void)
262	C_BaseAnimating::ShouldResetSequenceOnNewModel(void)
263	C_BaseAnimating::IsViewModel(void)const
264	C_BaseAnimating::FormatViewModelAttachment(int,matrix3x4_t &)
265	C_BaseAnimating::IsMenuModel(void)const
266	C_BaseAnimating::CalcAttachments(void)
267	C_BaseAnimating::LastBoneChangedTime(void)
268	C_BaseAnimating::OnModelLoadComplete(model_t const*)
269	C_TFPlayer::InitPhonemeMappings(void)
270	C_BaseFlex::SetupGlobalWeights(matrix3x4_t const*,int,float *,float *)
271	C_BaseFlex::SetupLocalWeights(matrix3x4_t const*,int,float *,float *)
272	C_BaseFlex::SetViewTarget(CStudioHdr *)
273	C_TFPlayer::StartSceneEvent(CSceneEventInfo *,CChoreoScene *,CChoreoEvent *,CChoreoActor *,C_BaseEntity *)
274	C_BaseFlex::ProcessSceneEvents(bool)
275	C_BaseFlex::ProcessSceneEvent(bool,CSceneEventInfo *,CChoreoScene *,CChoreoEvent *)
276	C_BaseFlex::ProcessSequenceSceneEvent(CSceneEventInfo *,CChoreoScene *,CChoreoEvent *)
277	C_TFPlayer::ClearSceneEvent(CSceneEventInfo *,bool,bool)
278	C_BaseFlex::CheckSceneEventCompletion(CSceneEventInfo *,float,CChoreoScene *,CChoreoEvent *)
279	C_BaseFlex::EnsureTranslations(flexsettinghdr_t const*)
280	C_BaseCombatCharacter::IsLookingTowards(C_BaseEntity const*,float)const
281	C_BaseCombatCharacter::IsLookingTowards(Vector const&,float)const
282	C_BaseCombatCharacter::IsInFieldOfView(C_BaseEntity *)const
283	C_BaseCombatCharacter::IsInFieldOfView(Vector const&)const
284	C_BaseCombatCharacter::IsLineOfSightClear(C_BaseEntity *,C_BaseCombatCharacter::LineOfSightCheckType)const
285	C_BaseCombatCharacter::IsLineOfSightClear(Vector const&,C_BaseCombatCharacter::LineOfSightCheckType,C_BaseEntity *)const
286	C_TFPlayer::Weapon_Switch(C_BaseCombatWeapon *,int)
287	C_TFPlayer::Weapon_CanSwitchTo(C_BaseCombatWeapon *)
288	C_BasePlayer::GetActiveWeapon(void)const
289	C_TFPlayer::GetGlowEffectColor(float *,float *,float *)
290	C_TFPlayer::UpdateGlowEffect(void)
291	C_TFPlayer::DestroyGlowEffect(void)
292	C_BasePlayer::SharedSpawn(void)
293	C_BasePlayer::GetSteamID(CSteamID *)
294	C_BasePlayer::GetPlayerMaxSpeed(void)
295	C_TFPlayer::CalcView(Vector &,QAngle &,float &,float &,float &)
296	C_BasePlayer::CalcViewModelView(Vector const&,QAngle const&)
297	C_BasePlayer::CalcRoll(QAngle const&,Vector const&,float,float)
298	C_BasePlayer::SetPlayerUnderwater(bool)
299	C_BasePlayer::Weapon_ShootPosition(void)
300	C_BasePlayer::Weapon_DropPrimary(void)
301	C_BasePlayer::GetAutoaimVector(float)
302	C_TFPlayer::CreateMove(float,CUserCmd *)
303	C_BasePlayer::AvoidPhysicsProps(CUserCmd *)
304	C_BasePlayer::PlayerUse(void)
305	C_BasePlayer::IsUseableEntity(C_BaseEntity *,unsigned int)
306	C_BasePlayer::GetObserverMode(void)const
307	C_BasePlayer::GetObserverTarget(void)const
308	C_TFPlayer::GetRepresentativeRagdoll(void)const
309	C_BasePlayer::TeamChange(int)
310	C_TFPlayer::IsAllowedToSwitchWeapons(void)
311	C_BasePlayer::GetActiveWeaponForSelection(void)
312	C_BasePlayer::GetRenderedWeaponModel(void)
313	C_TFPlayer::IsOverridingViewmodel(void)
314	C_TFPlayer::DrawOverriddenViewmodel(C_BaseViewModel *,int)
315	C_BasePlayer::GetDefaultAnimSpeed(void)
316	C_TFPlayer::ThirdPersonSwitch(bool)
317	C_BasePlayer::CanSetSoundMixer(void)
318	C_TFPlayer::GetVisionFilterFlags(bool)
319	C_TFPlayer::CalculateVisionUsingCurrentFlags(void)
320	C_BasePlayer::ViewModel_IsTransparent(void)
321	C_BasePlayer::ViewModel_IsUsingFBTexture(void)
322	C_BasePlayer::PreThink(void)
323	C_BasePlayer::PostThink(void)
324	C_BasePlayer::ItemPreFrame(void)
325	C_TFPlayer::ItemPostFrame(void)
326	C_BasePlayer::AbortReload(void)
327	C_BasePlayer::SelectLastItem(void)
328	C_BasePlayer::Weapon_SetLast(C_BaseCombatWeapon *)
329	C_TFPlayer::Weapon_ShouldSetLast(C_BaseCombatWeapon *,C_BaseCombatWeapon *)
330	C_BasePlayer::Weapon_ShouldSelectItem(C_BaseCombatWeapon *)
331	C_BasePlayer::GetLastWeapon(void)
332	C_TFPlayer::SelectItem(char const*,int)
333	C_BasePlayer::UpdateClientData(void)
334	C_BasePlayer::GetFOV(void)
335	C_BasePlayer::IsZoomed(void)
336	C_BasePlayer::ViewPunch(QAngle const&)
337	C_TFPlayer::OverrideView(CViewSetup *)
338	C_BasePlayer::GetPlayerMins(void)const
339	C_BasePlayer::GetPlayerMaxs(void)const
340	C_BasePlayer::SetVehicleRole(int)
341	C_TFPlayer::SetAnimation(PLAYER_ANIM)
342	C_TFPlayer::GetMinFOV(void)const
343	C_BasePlayer::PlayPlayerJingle(void)
344	C_TFPlayer::UpdateStepSound(surfacedata_t *,Vector const&,Vector const&)
345	C_BasePlayer::PlayStepSound(Vector &,surfacedata_t *,float,bool)
346	C_BasePlayer::GetFootstepSurface(Vector const&,char const*)
347	C_TFPlayer::GetStepSoundVelocities(float *,float *)
348	C_TFPlayer::SetStepSoundTime(stepsoundtimes_t,bool)
349	C_TFPlayer::GetOverrideStepSound(char const*)
350	C_TFPlayer::OnEmitFootstepSound(CSoundParameters const&,Vector const&,float)
351	C_BasePlayer::ExitLadder(void)
352	C_BasePlayer::Hints(void)
353	C_TFPlayer::GetHeadLabelMaterial(void)
354	C_TFPlayer::OnAchievementAchieved(int)
355	C_TFPlayer::UpdateWearables(void)
356	C_TFPlayer::CanUseFirstPersonCommand(void)
357	C_BasePlayer::CalcObserverView(Vector &,QAngle &,float &)
358	C_TFPlayer::GetChaseCamViewOffset(C_BaseEntity *)
359	C_TFPlayer::CalcInEyeCamView(Vector &,QAngle &,float &)
360	C_BasePlayer::GetDeathCamInterpolationTime(void)
361	C_TFPlayer::CalcDeathCamView(Vector &,QAngle &,float &)
362	C_BasePlayer::CalcFreezeCamView(Vector &,QAngle &,float &)
363	C_BasePlayer::SetLocalViewAngles(QAngle const&)
364	C_BasePlayer::SetViewAngles(QAngle const&)
365	C_TFPlayer::FireGameEvent(IGameEvent *)
366	C_BasePlayer::IsDucked(void)const
367	C_BasePlayer::IsDucking(void)const
368	C_BasePlayer::GetFallVelocity(void)
369	C_TFPlayer::GetDeathViewPosition(void)
370	C_TFPlayer::GetAttributeManager(void)
371	C_TFPlayer::GetAttributeContainer(void)
372	C_TFPlayer::GetAttributeOwner(void)
373	C_TFPlayer::GetAttributeList(void)
374	C_TFPlayer::ReapplyProvision(void)
375	C_TFPlayer::GetBossProgressImageName(void)const
376	C_TFPlayer::GetBossStatusProgress(void)const
377	C_TFPlayer::IsAllowedToPickUpFlag(void)const
378	C_TFPlayer::UpdateMVMEyeGlowEffect(bool)
379	C_TFPlayer::InventoryUpdated(CPlayerInventory *)
380	C_TFPlayer::SOCacheUnsubscribed(CSteamID const&)
