// `vtable for'CSteamEngine
// Auto reconstructed from vtable block @ 0x00ED3600
// from "steamclient.dylib", by ida_vtables.idc
0	CIPCServer::GetName(void)
1	CIPCServer::BThreadedMainLoop(void)
2	CIPCServer::BMainLoopActive(void)
3	CIPCServer::Run(void)
4	CIPCServer::CallSerializedFunction(int,CUtlBuffer &,CUtlBuffer &)
5	CIPCServer::CreateLocalServerPipe(void)
6	CIPCServer::FinishedCreateLocalServerPipe(CServerPipe *)
7	CIPCServer::ReleaseLocalServerPipe(int)
8	CSteamEngine::GetIPCServerMap(void)
9	CSteamEngine::~CSteamEngine()
10	CSteamEngine::~CSteamEngine()
11	CSteamEngine::Thread_Init(void)
12	CSteamEngine::Thread_Shutdown(void)
13	CIPCServer::GetCurrentCommandPipe(void)
14	CIPCServer::InitIPC(char const*,bool,bool,bool)
15	CSteamEngine::ShutdownIPC(void)
16	CSteamEngine::CallSerializedFunctionInternal(int,CUtlBuffer &,CUtlBuffer &)
17	CSteamEngine::BMainLoop(CCycleCount *,CCycleCount *)
18	CSteamEngine::RunInterface(CUtlBuffer &,CUtlBuffer &)
19	CSteamEngine::GetDesiredFrameTimeMicroSec(void)
20	CSteamEngine::TerminatePipe(int)
21	CSteamEngine::ActivateThread(void)
22	CSteamEngine::InitIPC(char const*,bool,bool,bool,EAccountType,unsigned int)
23	CSteamEngine::GetConnectedUniverse(void)
24	CSteamEngine::GetServerRealTime(void)
25	CSteamEngine::GetIPCountry(void)
26	CSteamEngine::GetNumRunningApps(void)
27	CSteamEngine::SetAppIDForCurrentPipe(unsigned int,bool)
28	CSteamEngine::GetAppID(void)
29	CSteamEngine::SetAPIDebuggingActive(bool,bool)
30	CSteamEngine::SignalAppsToShutDown(void)
31	CSteamEngine::SignalServiceAppsToDisconnect(void)
32	CSteamEngine::TerminateAllAppsMultiStep(unsigned int)
33	CSteamEngine::IsAPICallCompleted(unsigned long long,bool *)
34	CSteamEngine::GetAPICallFailureReason(unsigned long long)
35	CSteamEngine::GetAPICallResult(unsigned long long,void *,int,int,bool *)
36	CSteamEngine::AllocPendingAPICallHandle(void)
37	CSteamEngine::PostInProcAPICallResult(unsigned long long,void const*,int,int)
38	CSteamEngine::GetImageSize(int,unsigned int *,unsigned int *)
39	CSteamEngine::GetImageRGBA(int,unsigned char *,int)
40	CSteamEngine::CheckFileSignature(char const*)
41	CSteamEngine::SetOfflineMode(bool)
42	CSteamEngine::GetOfflineMode(void)
43	CSteamEngine::ShowGamepadTextInput(EGamepadTextInputMode,EGamepadTextInputLineMode,char const*,unsigned int,char const*)
44	CSteamEngine::GetEnteredGamepadTextLength(void)
45	CSteamEngine::GetEnteredGamepadTextInput(char *,unsigned int)
46	CSteamEngine::GamepadTextInputClosed(int,bool,char const*)
47	CSteamEngine::SetSpew(int,int,int)
48	CSteamEngine::BDownloadsDisabled(void)
49	CSteamEngine::GetInstallPath(void)
50	CSteamEngine::GetUserBaseFolderInstallImage(void)
51	CSteamEngine::GetManagedContentRoot(void)
52	CSteamEngine::BIsGlobalInstance(void)
53	CSteamEngine::GetCSERIPPort(unsigned int *,unsigned short *)
54	CSteamEngine::GetSecondsSinceComputerActive(void)
55	CSteamEngine::GetSecondsSinceAppActive(void)
56	CSteamEngine::SetComputerActive(void)
57	CSteamEngine::GetCurrentBatteryPower(void)
58	CSteamEngine::GetCellID(void)
59	CSteamEngine::GetBuildID(void)
60	CSteamEngine::SetCurrentUIMode(EUIMode)
61	CSteamEngine::GetCurrentUIMode(void)
62	CSteamEngine::SetLauncherType(ELauncherType)
63	CSteamEngine::GetLauncherType(void)
64	CSteamEngine::SetFocusedWindow(CGameID,unsigned long long,bool)
65	CSteamEngine::GetSteamUILanguage(void)
66	CSteamEngine::CheckSteamReachable(void)
67	CSteamEngine::SetLastGameLaunchMethod(EGameLaunchMethod)
68	CSteamEngine::SetVideoAdapterInfo(int,int,int,int,int,int)
69	CSteamEngine::SetControllerOverrideMode(CGameID,char const*,unsigned int)
70	CSteamEngine::SetOverlayWindowFocusForPipe(bool,bool,CGameID)
71	CSteamEngine::GetGameOverlayUIInstanceFocusGameID(bool *)
72	CSteamEngine::SetControllerConfigFileForAppID(unsigned int,char const*)
73	CSteamEngine::GetControllerConfigFileForAppID(unsigned int,char *,unsigned int)
74	CSteamEngine::IsSteamRunningInVR(void)
75	CSteamEngine::BIsRunningOnAlienwareAlpha(void)
76	CSteamEngine::StartVRDashboard(void)
77	CSteamEngine::GenerateSupportSystemReport(void)
78	CSteamEngine::GetSupportSystemReport(char *,unsigned int)
