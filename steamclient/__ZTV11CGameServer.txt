// `vtable for'CGameServer
// Auto reconstructed from vtable block @ 0x00ED2080
// from "steamclient.dylib", by ida_vtables.idc
0	CGameServer::~CGameServer()
1	CGameServer::~CGameServer()
2	CBaseUser::Init(void)
3	CBaseUser::Shutdown(void)
4	CGameServer::GetHSteamUser(void)
5	CBaseUser::GetSteamID(void)const
6	CGameServer::UserStats(void)
7	CGameServer::LogOff(void)
8	CGameServer::BLoggedOn(void)
9	CGameServer::GetLogonState(void)
10	CGameServer::BConnected(void)
11	CBaseUser::BTryingToLogin(void)
12	CBaseUser::GetCurrentSessionToken(void)
13	CBaseUser::SetCurrentSessionToken(unsigned long long)
14	CGameServer::SetCellID(unsigned int)
15	CBaseUser::SetWinningPingTimeForCellID(unsigned int)
16	CGameServer::RaiseConnectionPriority(EConnectionPriority)
17	CGameServer::ResetConnectionPriority(int)
18	CBaseUser::Test_FakeConnectionTimeout(void)
19	CBaseUser::Test_FailNextConnect(void)
20	CBaseUser::Test_AddCMAddress(unsigned int,unsigned short)
21	CBaseUser::Test_SetCMAddresses(netadr_t const*,unsigned int)
22	CBaseUser::SendP2PIntroducerPacket(EIntroducerRouting,void const*,unsigned int)
23	CGameServer::TrackSteamUsageEvent(ESteamUsageEvent,unsigned char const*,unsigned int)
24	CBaseUser::TrackSteamGUIUsage(char const*)
25	CBaseUser::OnConnectedToMultiplayerAuthServer(void)
26	CBaseUser::GetUserConfigFolder(char *,int)
27	CBaseUser::GetConfigString(EConfigSubTree)
28	CBaseUser::DeleteConfigKey(EConfigSubTree,char const*)
29	CBaseUser::SetConfigString(EConfigSubTree,char const*,char const*)
30	CBaseUser::GetConfigString(EConfigSubTree,char const*,char *,int)
31	CBaseUser::SetConfigInt(EConfigSubTree,char const*,int)
32	CBaseUser::GetConfigInt(EConfigSubTree,char const*,int *)
33	CBaseUser::SetConfigBinaryBlob(EConfigSubTree,char const*,unsigned char const*,unsigned int)
34	CBaseUser::GetConfigBinaryBlob(EConfigSubTree,char const*,unsigned char *,unsigned int *)
35	CBaseUser::GetConfigStoreKeyName(EConfigSubTree,char const*,char *,int)
36	CBaseUser::GetServiceTransport(void)
37	CBaseUser::GetPUser(void)
38	CGameServer::GetPGameServer(void)
39	CBaseUser::GetPContentServer(void)
40	CBaseUser::RunFrame(void)
41	CGameServer::Validate(CValidator &,char const*)
42	CBaseUser::OnSteamPipeClosed(int)
43	CGameServer::GetSteamID(void)
44	CGameServer::InitGameServer(unsigned int,unsigned short,unsigned short,unsigned int,unsigned int,char const*)
45	CGameServer::SetProduct(char const*)
46	CGameServer::SetGameDescription(char const*)
47	CGameServer::SetModDir(char const*)
48	CGameServer::SetDedicatedServer(bool)
49	CGameServer::LogOn(char const*)
50	CGameServer::LogOnAnonymous(void)
51	CGameServer::BSecure(void)
52	CGameServer::WasRestartRequested(void)
53	CGameServer::SetMaxPlayerCount(int)
54	CGameServer::SetBotPlayerCount(int)
55	CGameServer::SetServerName(char const*)
56	CGameServer::SetMapName(char const*)
57	CGameServer::SetPasswordProtected(bool)
58	CGameServer::SetSpectatorPort(unsigned short)
59	CGameServer::SetSpectatorServerName(char const*)
60	CGameServer::ClearAllKeyValues(void)
61	CGameServer::SetKeyValue(char const*,char const*)
62	CGameServer::SetGameTags(char const*)
63	CGameServer::SetGameData(char const*)
64	CGameServer::SetRegion(char const*)
65	CGameServer::SendUserConnectAndAuthenticate(unsigned int,void const*,unsigned int,CSteamID *)
66	CGameServer::CreateUnauthenticatedUserConnection(void)
67	CGameServer::SendUserDisconnect(CSteamID)
68	CGameServer::BUpdateUserData(CSteamID,char const*,unsigned int)
69	CGameServer::GetAuthSessionTicket(void *,int,unsigned int *)
70	CGameServer::BeginAuthSession(void const*,int,CSteamID)
71	CGameServer::EndAuthSession(CSteamID)
72	CGameServer::CancelAuthTicket(unsigned int)
73	CGameServer::IsUserSubscribedAppInTicket(CSteamID,unsigned int)
74	CGameServer::RequestUserGroupStatus(CSteamID,CSteamID)
75	CGameServer::GetGameplayStats(void)
76	CGameServer::GetServerReputation(void)
77	CGameServer::GetPublicIP(void)
78	CGameServer::HandleIncomingPacket(void const*,int,unsigned int,unsigned short)
79	CGameServer::GetNextOutgoingPacket(void *,int,unsigned int *,unsigned short *)
80	CGameServer::EnableHeartbeats(bool)
81	CGameServer::SetHeartbeatInterval(int)
82	CGameServer::ForceHeartbeat(void)
83	CGameServer::UDPRecvPkt(int,netadr_t const&,unsigned char *,int,void *)
84	CGameServer::OnUDPFatalError(int,unsigned int)
85	CGameServer::SetCountOfSimultaneousGuestUsersPerSteamAccount(int)
86	CGameServer::EnumerateConnectedUsers(int,ConnectedUserInfo_t *)
87	CGameServer::AssociateWithClan(CSteamID)
88	CGameServer::ComputeNewPlayerCompatibility(CSteamID)
89	CGameServer::_GSSetSpawnCount(unsigned int)
90	CGameServer::_GSSendUserConnect(unsigned int,unsigned int,unsigned short,void const*,unsigned int)
91	CGameServer::_GSSendSteam2UserConnect(unsigned int,void const*,unsigned int,unsigned int,unsigned short,void const*,unsigned int)
92	CGameServer::_GSSendSteam3UserConnect(CSteamID,unsigned int,void const*,unsigned int)
93	CGameServer::_GSGetSteam2GetEncryptionKeyToSendToNewClient(void *,unsigned int *,unsigned int)
94	CGameServer::_GSCreateUnauthenticatedUser(CSteamID *)
95	CGameServer::_BGetUserAchievementStatus(CSteamID,char const*)
96	CGameServer::_GSUpdateStatus(int,int,int,char const*,char const*,char const*)
97	CGameServer::_GSSendUserDisconnect(CSteamID,unsigned int)
98	CGameServer::_GSRemoveUserConnect(unsigned int)
99	CGameServer::_SetBasicServerData(unsigned short,bool,char const*,char const*,unsigned short,bool,char const*)
100	CGameServer::_GSSetServerType(int,unsigned int,unsigned int,unsigned short,unsigned short,unsigned short,char const*,char const*,bool)
