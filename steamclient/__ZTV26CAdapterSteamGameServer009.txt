// `vtable for'CAdapterSteamGameServer009
// Auto reconstructed from vtable block @ 0x00F09AC0
// from "steamclient.dylib", by ida_vtables.idc
0	CAdapterSteamGameServer009::LogOn(void)
1	CAdapterSteamGameServer009::LogOff(void)
2	CAdapterSteamGameServer009::BLoggedOn(void)
3	CAdapterSteamGameServer009::BSecure(void)
4	CAdapterSteamGameServer009::GetSteamID(void)
5	CAdapterSteamGameServer009::SendUserConnectAndAuthenticate(unsigned int,void const*,unsigned int,CSteamID *)
6	CAdapterSteamGameServer009::CreateUnauthenticatedUserConnection(void)
7	CAdapterSteamGameServer009::SendUserDisconnect(CSteamID)
8	CAdapterSteamGameServer009::BUpdateUserData(CSteamID,char const*,unsigned int)
9	CAdapterSteamGameServer009::BSetServerType(unsigned int,unsigned int,unsigned short,unsigned short,unsigned short,char const*,char const*,bool)
10	CAdapterSteamGameServer009::UpdateServerStatus(int,int,int,char const*,char const*,char const*)
11	CAdapterSteamGameServer009::UpdateSpectatorPort(unsigned short)
12	CAdapterSteamGameServer009::SetGameType(char const*)
13	CAdapterSteamGameServer009::BGetUserAchievementStatus(CSteamID,char const*)
14	CAdapterSteamGameServer009::GetGameplayStats(void)
15	CAdapterSteamGameServer009::RequestUserGroupStatus(CSteamID,CSteamID)
16	CAdapterSteamGameServer009::GetPublicIP(void)
17	CAdapterSteamGameServer009::SetGameData(char const*)
18	CAdapterSteamGameServer009::UserHasLicenseForApp(CSteamID,unsigned int)
